<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</title><link>/nebula-website/cn/posts/</link><description>Recent content in Posts on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 10 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="/nebula-website/cn/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Pick of the Week'20 | 第 15 周看点--Studio v1.0.2-beta 发布</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-04-10/</link><pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-04-10/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 15 个工作周的周五，放了小长假的你工作状态调整得如何？🌝 和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula Graph Studio v1.0.2-beta Nebula Graph Studio 是一款可视化的图数据库 Web 应用，集构图、数据导入、图探索于一体，无缝连接图数据库，给用户带来全新的图数据库使用体验。
本次 Nebula Graph Studio 1.0.2-beta 加入了图探索增加边属性显示及点标记配置，功能更加丰富。
你在使用什么图查询语言 在本周的 Nebula Graph 论坛有个主题贴：你所使用的图查询语言是什么？目前来看 Cypher 领先 Gremlin，如果你想给 Gremlin 投一票或者站队 Cypher 可以前往：https://discuss.nebula-graph.io/t/topic/433 给你使用的图查询语言投个票~
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~ 新增了关键字和保留字，标签： 文档 ，示例如下，pr 参见：https://github.com/vesoft-inc/nebula/pull/1930 # 非保留关键字无需引用可直接使用，且所有非保留字都会自动转换成小写，所以非保留字是不区分大小写。保留关键字需使用反引号标注方可使用，例如 `AND`。 nebula&amp;gt; CREATE TAG TAG(name string); [ERROR (-7)]: SyntaxError: syntax error near `TAG' nebula&amp;gt; CREATE TAG `TAG` (name string); -- 此处 TAG 为保留字 Execution succeeded 修复了 TTL 在 FETCH PROP ON 没生效的问题，标签： bugfix ，pr 参见：https://github.</description></item><item><title>全站 CDN 部署 Discourse 论坛</title><link>/nebula-website/cn/posts/self-host-discourse-forum-with-global-cdn/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/self-host-discourse-forum-with-global-cdn/</guid><description>Discourse 介绍 Discourse 是一款由 Stack Overflow 的联合创始人——Jeff Atwood，基于 Ruby on Rails 开发的开源论坛。相较于传统论坛，Discourse 从他全面开放的开源态度、简介明了的页面风格到其特有的内容运作体系都在证明自己是一款为下一个 10 年的互联网而设计的产品。现在，诸如 Car Talk 等国外知名产品都采用 Discourse 为论坛方案。
作为一个开源的论坛项目，Discourse 相对其他的论坛有以下亮点：
高度可定制：从发帖等级要求权限到论坛帖子标题最少字数要求，Discourse 在论坛设置里罗列了 25 设置大项，300+ 个论坛小项，即使大家都使用 Discourse 搭建论坛但是每个用 Discourse 搭建的论坛都有自己的风格。 插件：Discourse 官方及 Discourse 开源社区用户开发了丰富的插件可供使用，比如：个性化导航、自定义论坛封面。 集成：可接入第三方产品，Google Analytics、 Slack、Wordpress 都在支持之列。 免费：虽然 Discourse 有 $100/Month 的托管服务，但是你可以完全自行部署免费使用 Discourse 服务。 其他：Discourse 还有其他许多的好处，举个例子，它提供了一个机器人 Discobot 是一个可自定义的 bot，交互式地教新用户使用平台的许多功能，例如为主题添加书签，单框链接（嵌入的预览），添加 emoji表情，非常简单的格式设置，添加图片回复，标记帖子以及如何使用搜索功能。 丰富的插件、可自定义论坛设置便是 Nebula Graph 选择 Discourse 最大的原因，而本文不在于介绍如何搭建 Discourse（搭建 Discourse 是一个简单的活，可自行搜索教程），本文旨在介绍图数据库 Nebula graph 如何利用 CDN 来部署 Discourse。
部署 Discourse 自托管的原因 尽管 Discourse 官方的托管服务，但由于国内的访问质量不稳定、不能自由的修改插件和自定义网络设置，因此我们决定自行托管这项服务。基于自托管服务，我们对网络、插件系统做了一些自定义修改，使得目前 Nebula Graph社区有着更好的访问速度和功能。</description></item><item><title>Pick of the Week'20 | 第 14 周看点--RC4 和官网 2.0 齐上线</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-04-03/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-04-03/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 14 个工作周的周五，股票打 2 折的瑞星咖啡今天你有来一杯吗？🌝 下面来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 rc4 发布 本次 RC4 上线 INDEX 功能，LOOKUP ON 对建立索引的数据进行查询；RC4 提供了基于 SPACE 层级的权限管理和 ACL 授权模式。在运维方面，新增 Nebula Stats Exporter 对接基于 Grafana 和 Prometheus 的监控系统；
官网 2.0 上线 本次官网 2.0 中我们重新设计了官网的首页，在首页部分增加了最新博文信息，此外在博客列表页面我们加入了标签系统，方便社区小伙伴快速选择感兴趣的技术主题进行阅读，如果你有感兴趣的技术主题 Nebula 还未分享，官方论坛：https://discuss.nebula-graph.io/ 向我们提出你的建议反馈~ Thx
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
Nebula 的安装支持指定安装目录，标签： Install ，pr 参见：https://github.</description></item><item><title>图数据库 Nebula Graph RC4 Release Note</title><link>/nebula-website/cn/posts/nebula-graph-rc4-release-note/</link><pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-rc4-release-note/</guid><description>本次 RC4 上线 INDEX 功能，LOOKUP ON 对建立索引的数据进行查询；RC4 提供了基于 SPACE 层级的权限管理和 ACL 授权模式。在运维方面，新增 Nebula Stats Exporter 对接基于 Grafana 和 Prometheus 的监控系统；
功能 支持 INDEX 功能， CREATE INDEX 创建索引，REBUILD INDEX ，对已有数据重建索引 #1566， DROP INDEX 删除已建索引 #1776 新增 LOOKUP ON ，对建立索引的数据进行查询 #1705, 当有索引时， Storage Engine 的插入性能 #1738 提供基于 SPACE 层级的用户管理和权限控制，CREATE USER 创建用户，目前有 GOD 、 ADMIN 、 DBA 、 USER 、 GUEST 等 5 种角色权限。 GRANT ROLE 赋予某用户某权限， REVOKE ROLE 撤销已赋予给某用户的权限 #1842、#1873 角色及其对应操作权限示例 #1929、#1917，在 nebula-graphd.</description></item><item><title>浅谈图数据库</title><link>/nebula-website/cn/posts/review-on-graph-databases/</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/review-on-graph-databases/</guid><description>本文主要讨论图数据库背后的设计思路、原理还有一些适用的场景，以及在生产环境中使用图数据库的具体案例。
从社交网络谈起 下面这张图是一个社交网络场景，每个用户可以发微博、分享微博或评论他人的微博。这些都是最基本的增删改查，也是大多数研发人员对数据库做的常见操作。而在研发人员的日常工作中除了要把用户的基本信息录入数据库外，还需找到与该用户相关联的信息，方便去对单个的用户进行下一步的分析，比如说：我们发现张三的账户里有很多关于 AI 和音乐的内容，那么我们可以据此推测出他可能是一名程序员，从而推送他可能感兴趣的内容。
这些数据分析每时每刻都会发生，但有时候，一个简单的数据工作流在实现的时候可能会变得相当复杂，此外数据库性能也会随着数据量的增加而锐减，比如说获取某管理者下属三级汇报关系的员工，这种统计查询在现在的数据分析中是一种常见的操作，而这种操作往往会因为数据库选型导致性能产生巨大差异。
传统数据库的解决思路 传统数据库的概念模型及查询的代码 传统解决上述问题最简单的方法就是建立一个关系模型，我们可以把每个员工的信息录入表中，存在诸如 MySQL 之类的关系数据库，下图是最基本的关系模型：
但是基于上述的关系模型，要实现我们的需求，就不可避免地涉及到很多关系数据库 JOIN 操作，同时实现出来的查询语句也会变得相当长(有时达到上百行)：
(SELECT T.directReportees AS directReportees, sum(T.count) AS count FROM ( SELECT manager.pid AS directReportees, 0 AS count FROM person_reportee manager WHERE manager.pid = (SELECT id FROM person WHERE name = &amp;#34;fName lName&amp;#34;) UNION SELECT manager.pid AS directReportees, count(manager.directly_manages) AS count FROM person_reportee manager WHERE manager.pid = (SELECT id FROM person WHERE name = &amp;#34;fName lName&amp;#34;) GROUP BY directReportees UNION SELECT manager.</description></item><item><title>Pick of the Week'20 | 第 13 周看点--GitHub上的 defect-p2 标签</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-27/</link><pubDate>Fri, 27 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-27/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 13 个工作周的周五，美股大涨的一周过去了你乘上这阵风了吗？🌝 下面来和情绪高涨的 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
存储层升级了依赖的 RocksDB 版本，标签： Storage ，pr 参见：https://github.com/vesoft-inc/nebula/pull/1948、https://github.com/vesoft-inc/nebula/pull/1953、https://github.com/vesoft-inc/nebula/pull/1973 对于不支持的系统，会退出编译过程，(感谢社区小伙伴的 pr) ，标签： 编译 ，pr 参见：https://github.com/vesoft-inc/nebula/pull/1951 job manager 支持提交 flush 任务，标签： 文档 ，示例如下，pr 参见：https://github.com/vesoft-inc/nebula/pull/1957 社区问答 Pick of the Week 每周会从官方论坛、微博、知乎、微信群、微信公众号及 CSDN 等技术社区选取 3 - 5 个用户问题同你分享，欢迎阅读本文的你通过知乎、微信公众号后台或者添加 Nebula 小助手微信号：NebulaGraphbot 进群交流。
@周游 提问 大佬们，有没有 docker 分布式部署的教程或链接，刚刚试了下官方的教程，发现是单机多节点，然后自己尝试改了下 docker compose.</description></item><item><title>图数据库 Nebula Graph TTL 特性</title><link>/nebula-website/cn/posts/clean-stale-data-with-ttl-in-nebula-graph/</link><pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/clean-stale-data-with-ttl-in-nebula-graph/</guid><description>导读 身处在现在这个大数据时代，我们处理的数据量需以 TB、PB, 甚至 EB 来计算，怎么处理庞大的数据集是从事数据库领域人员的共同问题。解决这个问题的核心在于，数据库中存储的数据是否都是有效的、有用的数据，因此如何提高数据中有效数据的利用率、将无效的过期数据清洗掉，便成了数据库领域的一个热点话题。在本文中我们将着重讲述如何在数据库中处理过期数据这一问题。
在数据库中清洗过期数据的方式多种多样，比如存储过程、事件等等。在这里笔者举个例子来简要说明 DBA 经常使用的存储过程 + 事件来清理过期数据的过程。
存储过程 + 事件清洗数据 存储过程（procedure） 存储过程是由一条或多条 SQL 语句组成的集合，当对数据库进行一系列的读写操作时，存储过程可将这些复杂的操作封装成一个代码块以便重复使用，大大减少了数据库开发人员的工作量。通常存储过程编译一次，可以执行多次，因此也大大的提高了效率。
存储过程有以下优点：
简化操作，将重复性很高的一些操作，封装到一个存储过程中，简化了对这些 SQL 的调用 批量处理，SQL + 循环，减少流量，也就是“跑批” 统一接口，确保数据的安全 一次编译多次执行，提高了效率。 以 MySQL 为例，假如要删除数据的表结构如下：
mysql&amp;gt; SHOW CREATE TABLE person; +--------+---------------------------------------------------------------------------------------------------------------------------------+ | Table | Create Table | +--------+---------------------------------------------------------------------------------------------------------------------------------+ | person | CREATE TABLE `person` ( `age` int(11) DEFAULT NULL, `inserttime` datetime DEFAULT NULL ) ENGINE=InnoDB DEFAULT CHARSET=utf8 | +--------+---------------------------------------------------------------------------------------------------------------------------------+ 1 row in set (0.</description></item><item><title>Pick of the Week'20 | 第 12 周看点--Nebula csv 数据导入你该知道的事项</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-20/</link><pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-20/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 12 个工作周的周五，又一周过去了你的股票还好吗？🌝 下面来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula csv 数据导入（go-importer) 你该知道的事项  Nebula Graph 根据社区用户在数据导入这块遇到的问题，整理了一份数据导入 Tips 清单以便其他社区用户导入的时候使用，可有效防止踩坑 👏。论坛帖子地址：https://discuss.nebula-graph.io/t/nebula-csv-go-importer/361
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
支持 ACL，标签： 权限 ，pr 参见：https://github.com/vesoft-inc/nebula/pull/1842，角色及其对应操作权限示例如下，pr 参见：https://github.com/vesoft-inc/nebula/pull/1929  新增生产环境中使用 Nebula 的建议配置 ，标签： 配置 ，pr 参见：https://github.com/vesoft-inc/nebula/pull/1908 社区问答 Pick of the Week 每周会从官方论坛、微博、知乎、微信群、微信公众号及 CSDN 等技术社区选取 3 - 5 个用户问题同你分享，欢迎阅读本文的你通过知乎、微信公众号后台或者添加 Nebula 小助手微信号：NebulaGraphbot 进群交流。</description></item><item><title>使用 Github Action 进行前端自动化发布</title><link>/nebula-website/cn/posts/github-action-automating-project-process/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/github-action-automating-project-process/</guid><description>前言 说起自动化，无论是在公司还是我们个人的项目中，都会用到或者编写一些工具来帮助我们去处理琐碎重复的工作，以节约时间提升效率，尤其是我们做前端开发会涉及诸如构建、部署、单元测试等这些开发工作流中重复的事项，本篇文章就是介绍如何利用 GitHub 提供的 Actions 来完成我们前端的发布自动化。
Github Actions 什么是 Actions 笔者个人理解为在某种条件下可被触发的任务，利用一个个任务（Action）就可组建成我们的工作流，想要更详细的介绍定义的同学可以移步 官方Action定义，有助获取更多的信息，这里就不搬运啦~
使用 Actions 的好处 前端自动化部署方案有多种，那么 GitHub 推出的 Actions 有什么魅力呢？在笔者看来，Action 在前端自动化发布有下面 3 点亮点：
免费，Action 可与 GitHub 中的 Repo 进行绑定（下图所示，具体操作见下文），开箱即用：这就意味着我们不需要提供跑任务的机器，也不用管怎么把任务流对接起来，只要简单地熟悉规则，就能将项目 run 起来。而我们大部分觉得某个工具麻烦，是因为使用步骤繁琐，若要实现功能 A，还需做 B/C/D 操作才行，这时候我们要么放弃要么转向操作更简单的工具，毕竟省时省事才是开发第一要务~ 任务插件化，持续丰富的插件开源市场：得益于 Github 定义了 Actions 规范，让我们使用的 Actions 时都是按某种已知规则开发，这使得 Actions 更易于装配复用，很多优秀的开发者在制作完成工作流后，将自己开发的 Actions 放到 GitHub 的 Actions 集市上去，这样尚未完成自己常规工作流的开发，不需要额外开发这些已有重复逻辑直接使用现成的他人 Actions 即可。在笔者的实践过程中，前端的构建部署工作流，就是用的各类现有的 Actions 组合实现的。 和 GitHub 集成好，可避免因为使用 Travis 等第三方工具引起额外的心智负担，在 GitHub 上可直接查看 CI/CD 的情况。 当然 Actions 还有许多其他好处，还待各位亲自尝试，至少使用过 Actions 的人都说好 😬</description></item><item><title>Pick of the Week'20 | 第 11 周看点--图数据库的蓄水池</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-13/</link><pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-13/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 11 个工作周的周五，本周的股市像使用了蓄水池算法一般随机地跌涨。 🌝 下面来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 蓄水池算法 图数据库在社交网络等业务场景中会遇到 &amp;ldquo;超级大点&amp;rdquo; 问题，点的边可能有千万条，业务往往只需要 K 条就能满足其算法精度。Nebula 支持 Reservoir Sampling，在只遍历一遍数据，时间复杂度 O(N) 的情况下，随机的抽取 K 个元素，每个元素被抽取的概率都是 K/N，并且空间复杂度 O(K)。
蓄水池算法的使用方法：在 storage 配置文件中设置 enable_reservoir_sampling 为 true 打开开关采样开关， max_edge_returned_per_vertex 配置采样数，示例如下，pr 参见链接：https://github.com/vesoft-inc/nebula/pull/1746
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
实现 User Manager， CREATE USER 创建用户，目前有 GOD , ADMIN , DBA , GUEST 等四种角色权限。 GRANT ROLE 赋予某用户某权限， REVOKE ROLE 撤销已赋予给某用户的权限 , 标签： 权限 ，pr 参见：https://github.</description></item><item><title>分布式图数据库 Nebula Graph 的 Index 实践</title><link>/nebula-website/cn/posts/how-indexing-works-in-nebula-graph/</link><pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/how-indexing-works-in-nebula-graph/</guid><description>导读 索引是数据库系统中不可或缺的一个功能，数据库索引好比是书的目录，能加快数据库的查询速度，其实质是数据库管理系统中一个排序的数据结构。不同的数据库系统有不同的排序结构，目前常见的索引实现类型如 B-Tree index、B+-Tree index、B*-Tree index、Hash index、Bitmap index、Inverted index 等等，各种索引类型都有各自的排序算法。
虽然索引可以带来更高的查询性能，但是也存在一些缺点，例如：
创建索引和维护索引要耗费额外的时间,往往是随着数据量的增加而维护成本增大 索引需要占用物理空间 在对数据进行增删改的操作时需要耗费更多的时间,因为索引也要进行同步的维护 Nebula Graph 作为一个高性能的分布式图数据库，对于属性值的高性能查询，同样也实现了索引功能。本文将对 Nebula Graph 的索引功能做一个详细介绍。
图数据库 Nebula Graph 术语 开始之前，这里罗列一些可能会使用到的图数据库和 Nebula Graph 专有术语：
Tag：点的属性结构，一个 Vertex 可以附加多种 tag，以 TagID 标识。（如果类比 SQL，可以理解为一张点表） Edge：类似于 Tag，EdgeType 是边上的属性结构，以 EdgeType 标识。（如果类比 SQL，可以理解为一张边表） Property：tag / edge 上的属性值，其数据类型由 tag / edge 的结构确定。 Partition：Nebula Graph 的最小逻辑存储单元，一个 StorageEngine 可包含多个 Partition。Partition 分为 leader 和 follower 的角色，Raftex 保证了 leader 和 follower 之间的数据一致性。 Graph space：每个 Graph Space 是一个独立的业务 Graph 单元，每个 Graph Space 有其独立的 tag 和 edge 集合。一个 Nebula Graph 集群中可包含多个 Graph Space。 Index：本文中出现的 Index 指 nebula graph 中点和边上的属性索引。其数据类型依赖于 tag / edge。 TagIndex：基于 tag 创建的索引，一个 tag 可以创建多个索引。目前（2020.</description></item><item><title>Pick of the Week'20 | 第 10 周看点--Hacker News 热烈讨论的图查询语言</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-06/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-03-06/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 10 个工作周的周五，三月除了有变暖的天气还有研发们对图数据库高涨的热情，你可以在本周的大事件中感受到 🌝 下面来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 Hacker News 热帖：Graph query languages: Cypher vs. Gremlin vs. nGQL 这是图数据库 Nebula Graph 第二次发的帖成为 Hacker News 当日热帖，第一次是我们在 Hacker News 发了 Nebula Graph 的介绍引起了热烈讨论，这一次我们发的图数据库查询语言对比帖再次成为了当日热榜，你可以通过下面的截图感受下国内外研发人员对图数据库查询语言的看法：有人吐槽 Neo4j，有人表达对 Cypher 的爱，有人 diss Gremlin…Hacker News 阅读传送门：https://news.ycombinator.com/item?id=22482665
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
GO 支持关键词 BIDIRECT 进行双向遍历提供，标签：nGQL，示例如下，pr 参见链接： https://github.</description></item><item><title>一文了解各大图数据库查询语言 | 操作入门篇</title><link>/nebula-website/cn/posts/graph-query-language-comparison-cypher-gremlin-ngql/</link><pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/graph-query-language-comparison-cypher-gremlin-ngql/</guid><description>文章的开头我们先来看下什么是图数据库，根据维基百科的定义：图数据库是使用图结构进行语义查询的数据库，它使用节点、边和属性来表示和存储数据。
虽然和关系型数据库存储的结构不同（关系型数据库为表结构，图数据库为图结构），但不计各自的性能问题，关系型数据库可以通过递归查询或者组合其他 SQL 语句（Join）完成图查询语言查询节点关系操作。得益于 1987 年 SQL 成为国际标准化组织（ISO）标准，关系型数据库行业得到了很好的发展。同 60、70 年代的关系型数据库类似，图数据库这个领域的查询语言目前也没有统一标准，虽然 19 年 9 月经过国际 SQL 标准委员会投票表决，决定将图查询语言（Graph Query Language）纳为一种新的数据库查询语言，但 GQL 的制定仍需要一段时间。
介于市面上没有统一的图查询语言标准，在本文中我们选取市面上主流的几款图查询语言来分析一波用法，由于篇幅原因本文旨在简单介绍图查询语言和常规用法，更详细的内容将在进阶篇中讲述。
图查询语言·介绍 图查询语言 Gremlin Gremlin 是 Apache ThinkerPop 框架下的图遍历语言。Gremlin 可以是声明性的也可以是命令性的。虽然 Gremlin 是基于 Groovy 的，但具有许多语言变体，允许开发人员以 Java、JavaScript、Python、Scala、Clojure 和 Groovy 等许多现代编程语言原生编写 Gremlin 查询。
支持图数据库：Janus Graph、InfiniteGraph、Cosmos DB、DataStax Enterprise(5.0+) 、Amazon Neptune
图查询语言 Cypher Cypher 是一个描述性的图形查询语言，允许不必编写图形结构的遍历代码对图形存储有表现力和效率的查询，和 SQL 很相似，Cypher 语言的关键字不区分大小写，但是属性值，标签，关系类型和变量是区分大小写的。
支持图数据库： Neo4j、RedisGraph
图查询语言 nGQL nGQL 是一种类 SQL 的声明型的文本查询语言，nGQL 同样是关键词大小写不敏感的查询语言，目前支持模式匹配、聚合运算、图计算，可无嵌入组合语句。
支持图数据库：Nebula Graph
图查询语言·术语篇 在比较这 3 个图查询语言之前，我们先来看看他们各自的术语，如果你翻阅他们的文档会经常见到下面这些“关键字”，在这里我们不讲用法，只看这些图数据库常用概念在这 3 个图数据库文档中的叫法。</description></item><item><title>Pick of the Week'20 | 第 9 周看点--2020 H1 RoadMap 发布</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-28/</link><pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-28/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 9 个工作周的周五，杭州来了一波小升温和大降温，你那天气如何？🌝 来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 2020 H1 RoadMap 图数据库 Nebula Graph 2020 上半年 Roadmap 发布，现已同步到官方论坛 Announcements 板块。
Nebula Graph 论坛正式上线 两周前的 Pick of the Week（简称 PotW）我们宣布 Nebula Graph 论坛上线，经过 2 周的公测之后我们正式上线了，在论坛默认页、分类等方面做了优化。
此外，Nebula Graph 论坛在正式上线之后 7*24 有专门的 Dev 来第一时间解答你的提问，如果你有使用方面的问题，欢迎去 Users 分类下向我们的 Dev 们提问，在 Announcements 下你可以看最新的产品动态及 Roadmap，在 Blog 分类下可以读到我们 Dev 最新力作，Enjoy it~ Link：https://discuss.nebula-graph.io/
最后，有任何建议和反馈， Site Feedback 我们在等你🎊</description></item><item><title>Kubernetes 部署 Nebula 图数据库集群</title><link>/nebula-website/cn/posts/how-to-deploy-nebula-graph-in-kubernetes/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/how-to-deploy-nebula-graph-in-kubernetes/</guid><description>Kubernetes 是什么 Kubernetes 是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes 的目标是让部署容器化的应用简单并且高效，Kubernetes 提供了应用部署，规划，更新，维护的一种机制。Kubernetes 在设计结构上定义了一系列的构建模块，其目的是为了提供一个可以部署、维护和扩展应用程序的机制，组成 Kubernetes 的组件设计概念为松耦合和可扩展的，这样可以使之满足多种不同的工作负载。可扩展性在很大程度上由 Kubernetes API 提供，此 API 主要被作为扩展的内部组件以及 Kubernetes 上运行的容器来使用。
Kubernetes 主要由以下几个核心组件组成：
etcd 保存了整个集群的状态 apiserver 提供了资源操作的唯一入口，并提供认证、授权、访问控制、API注册和发现等机制 controller manager 负责维护集群的状态，比如故障检测、自动扩展、滚动更新等 scheduler 负责资源的调度，按照预定的调度策略将Pod调度到相应的机器上 kubelet 负责维护容器的生命周期，同时也负责 Volume和网络的管理 Container runtime 负责镜像管理以及 Pod 和容器的真正运行（CRI） kube-proxy 负责为 Service 提供 cluster 内部的服务发现和负载均衡 除了核心组件，还有一些推荐的 Add-ons：
kube-dns 负责为整个集群提供 DNS 服务 Ingress Controller 为服务提供外网入口 Heapster 提供资源监控 Dashboard 提供 GUI Federation 提供跨可用区的集群 Fluentd-elasticsearch 提供集群日志采集、存储与查询 Kubernetes 和数据库 数据库容器化是最近的一大热点，那么 Kubernetes 能为数据库带来什么好处呢？
故障恢复: Kubernetes 提供故障恢复的功能，数据库应用如果宕掉，Kubernetes 可以将其自动重启，或者将数据库实例迁移到集群中其他节点上 存储管理: Kubernetes 提供了丰富的存储接入方案，数据库应用能透明地使用不同类型的存储系统 负载均衡: Kubernetes Service 提供负载均衡功能，能将外部访问平摊给不同的数据库实例副本上 水平拓展: Kubernetes 可以根据当前数据库集群的资源利用率情况，缩放副本数目，从而提升资源的利用率 目前很多数据库，如：MySQL，MongoDB 和 TiDB 在 Kubernetes 集群中都能运行很良好。</description></item><item><title>Pick of the Week'20 | 第 8 周看点--索引、属性查询已上线</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-21/</link><pubDate>Fri, 21 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-21/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 8 个工作周的周五，据说下周有一波复工潮，你是当中一员吗？ 🌝来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 索引和属性查询已上线 根据属性查询符合条件的点，pr 参见链接：https://github.com/vesoft-inc/nebula/pull/1705
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
新增 job manager，管理长时间运行任务。目前已经支持 flush 和 compact 任务。支持 start/stop/list/recover job，其中 recover job 可将失败的任务重新添加到执行队列中，标签： 任务调度 ，示例如下图，pr 参见链接： https://github.com/vesoft-inc/nebula/pull/1424 当 Drop Index 命令执行后，由 compaction 完成 GC。标签： index ，pr 参见链接：https://github.com/vesoft-inc/nebula/pull/1776 社区问答 Pick of the Week 每周会从微博、知乎、微信群、微信公众号及 CSDN 等技术社区选取 3 - 5 个用户问题同你分享，欢迎阅读本文的你通过知乎、微信公众号后台或者添加 Nebula 小助手微信号：NebulaGraphbot 进群交流。</description></item><item><title>应用 AddressSanitizer 发现程序内存错误</title><link>/nebula-website/cn/posts/introduction-to-google-memory-detect-tool-addresssanitizer/</link><pubDate>Tue, 18 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/introduction-to-google-memory-detect-tool-addresssanitizer/</guid><description>作为 C/ C++ 工程师，在开发过程中会遇到各类问题，最常见便是内存使用问题，比如，越界，泄漏。过去常用的工具是 Valgrind，但使用 Valgrind 最大问题是它会极大地降低程序运行的速度，初步估计会降低 10 倍运行速度。而 Google 开发的 AddressSanitizer 这个工具很好地解决了 Valgrind 带来性能损失问题，它非常快，只拖慢程序 2 倍速度。
AddressSanitizer 概述 AddressSanitizer 是一个基于编译器的测试工具，可在运行时检测 C/C++ 代码中的多种内存错误。严格上来说，AddressSanitizer 是一个编译器插件，它分为两个模块，一个是编译器的 instrumentation 模块，一个是用来替换 malloc/free 的动态库。
Instrumentation 主要是针对在 llvm 编译器级别对访问内存的操作（store，load，alloc等），将它们进行处理。动态库主要提供一些运行时的复杂的功能（比如 poison/unpoison shadow memory）以及将 malloc/free 等系统调用函数 hook 住。
AddressSanitizer 基本使用 根据 AddressSanitizer Wiki 可以检测下面这些内存错误
Use after free：访问堆上已经被释放的内存 Heap buffer overflow：堆上缓冲区访问溢出 Stack buffer overflow：栈上缓冲区访问溢出 Global buffer overflow：全局缓冲区访问溢出 Use after return：访问栈上已被释放的内存 Use after scope：栈对象使用超过定义范围 Initialization order bugs：初始化命令错误 Memory leaks：内存泄漏 这里我只简单地介绍下基本的使用，详细的使用文档可以看官方的编译器使用文档，比如 Clang 的文档：https://clang.</description></item><item><title>Pick of the Week'20 | 第 7 周看点--Nebula 论坛上线</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-14/</link><pubDate>Fri, 14 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-14/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 7 个工作周的周五，没有情人的情人节快乐 🌝来和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula 论坛上线 Nebula Graph 官方论坛已上线，你可以在论坛里提 使用问题 、 意见反馈 ，也可以在论坛上读到我们最新的 技术文章 ，了解 产品动态 。
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
新增 Nebula Stats Exporter ，采集 Nebula 集群监控和性能指标信息给 Prometheus，使用 Grafana 作为可视化组件，标签： 监控 ，pr 参见链接： https://github.com/vesoft-inc/nebula-stats-exporter/pull/2 支持 ttl，指定数据的有效期，标签： TTL ，示例见下图，pr 参见链接：https://github.com/vesoft-inc/nebula/pull/1584、https://github.com/vesoft-inc/nebula/pull/422 新增 Spark 对接 Nebula Graph 的示例，标签： OLAP ，pr 参见链接：https://github.</description></item><item><title>前端 Docker 镜像体积优化</title><link>/nebula-website/cn/posts/how-to-reduce-docker-image-size/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/how-to-reduce-docker-image-size/</guid><description>如果 2019 年技术圈有十大流行词，容器化肯定占有一席之地，随着 Docker 的风靡，前端领域应用到 Docker 的场景也越来越多，本文主要来讲述下开源的分布式图数据库 Nebula Graph 是如何将 Docker 应用到可视化界面中。
为什么要用 Docker 对于前端日常开发而言，有时也会用到 Docker，结合到 Nebula Graph Studio （分布式图数据库 Nebula Graph 的图形界面工具）使用 Docker 主要基于以下考虑:
统一运行环境：我们的工具背后有好几个服务组合在一起，诸如不同技术栈的现有服务，纯前端的静态资源。 用户使用成本低：目前云服务还在开发中，想让用户对服务组合无感，能直接在本地一键启动应用并使用。 快速部署：团队本就提供有 Nebula镜像版本 实践，给了我们前端一些参考和借鉴。 Docker 镜像的构建 既然要使用 Docker 来承载我们的应用，就得将项目进行镜像构建。与所有 build 镜像类似，需要配置一份命名为Dockerfile 的文件，文件是一些步骤的描述，简单来说就是把项目复制到镜像里，并设置好启动方式：
# 选择基础镜像 FROM node:10 # 设置工作目录 WORKDIR /nebula-web-console # 把当前项目内容拷贝到镜像中的 /nebula-web-console 目录下 ADD . /nebula-web-console # 在镜像中下载前端依赖 RUN npm install # 执行构建 RUN npm run build EXPOSE 7001 # 镜像启动时执行的部署命令 CMD [&amp;#34;npm&amp;#34;, &amp;#34;run&amp;#34;, &amp;#34;docker-start&amp;#34;] Docker 镜像体积优化 如果按照上述的配置文件来构建 Docker 镜像，以我们的项目为例，将会生成一个体积约为 1.</description></item><item><title>Pick of the Week'20 | 第 6 周看点--DB-Engine 2 月图数据库排名发榜</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-07/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-02-07/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 6 个工作周的周五，也是在家办公的第一周，可还习惯？🌝和 Nebula 看看本周图数据库和 Nebula 有什么新看点~~
本周大事件 DB-Engine 2020 年 2 月图数据库趋势 整体上来说图数据库的排名变大并不大，前九名席位基本固定，新晋第十名是时态数据库 FaunaDB，而这次排名 Nebula Graph 表现也不错上升到了 21 名 👏👏
RC3 release note 本次 RC3 主要新增 dump_tools 工具，导出指定条件的数据；发布 GUI 工具 Nebula Graph Studio，支持可视化探索，数据导入等功能；新增扫描点边接口，对接 OLAP。
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
支持将集合运算的结果赋值给变量，标签： Storage Engine ，示例如下，pr 参见链接： https://github.com/vesoft-inc/nebula/pull/1572 优化了多步关系查询的性能，标签： nGQL ，pr 参见链接：https://github.</description></item><item><title>图数据库 Nebula Graph RC3 Release Note</title><link>/nebula-website/cn/posts/nebula-graph-rc3-release-note/</link><pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-rc3-release-note/</guid><description>本次 RC3 主要新增 dump_tools 工具，导出指定条件的数据；发布 GUI 工具 Nebula Graph Studio，支持可视化探索，数据导入等功能；新增扫描点边接口，对接 OLAP。
Query engine 支持获取给定点的全部属性 #1486 新增 DELETE EDGE ， 删除指定点 #1063 支持 IF EXISTS ，可防止删除不存在 tag/edgetype 的错误 #1505 支持 IF NOT EXISTS ，可防止创建已存在 space/tag/edgetype 的错误 #1379 输出 graphd metrics #1451 Storage 对于 OLAP，storage 新增扫描点边接口 #1381 配置支持更改 heartbeat_interval_secs ，Meta 客户端上报心跳的时间间隔 #1540 本地测试时，支持使用本地 gflags 配置，而非去 meta 上获取，避免本地修改参数没起作用的问题 #1411 增强了 balancer，balance 的每个步骤加入了检查. #1378 支持对整个集群创建快照 #1199 #1372 优化过滤条件下推 #947 每个 raft group 支持从 leader/follow 读取数据或只从 leader 读取数据 #1363 Storage / Meta Clients 增加了超时时间设置，可通过 meta_client_timeout_ms 配置，默认 60s #1399 Build 极大的简化了编译流程，支持 2.</description></item><item><title>从天津百货大楼 5 病例“迷局”见新冠病毒传播路径</title><link>/nebula-website/cn/posts/detect-corona-virus-spreading-with-graph-database/</link><pubDate>Thu, 06 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/detect-corona-virus-spreading-with-graph-database/</guid><description>天津某百货大楼内部相继出现 5 例新冠肺炎确诊病例，从起初的 3 个病例来看，似乎找不到任何流行病学上的关联性。在这种背景之下，作为技术人员可以通过什么技术来找寻病例之间的联系呢？
摘要 最初，nCoV 新冠病毒的扩散过程是由一个人（节点）向各其他人（节点）扩散的树状结构，但随着病毒的变异和人员交叉感染、“百家宴”、“联欢会”、“春运”等人员聚集，疫情扩散为网状结构。可以使用图数据库来存储相关人员、地理位置、感染时间等数据，本文将使用图数据库 Nebula Graph 作为工具，带大家一起探讨疫情的传播路径，并找到相关的疑似病例。
天津案例简述 下面用 Usr1、Usr2、Usr3、Usr4、Usr5 来代指这 5 例病例，看一下他们的行为轨迹：
Usr1 信息:
Usr1 于 1 月 24 日开始发热，在 1 月 22 日至 1 月 30 日期间在天津百货大厦 A 区工作，于 1 月 31 日确诊； Usr2 信息：Usr2 为 Usr1 丈夫，于 1 月 25 日开始出现腹泻症状，于 2 月 1 日确诊； Usr3 信息：Usr3 于 1 月 18 日接触过一个疑似病例，而后在天津百货大厦 B 区工作，于 1 月 24 日开始发热，于 2 月 1 日确诊； Usr4 信息：Usr4 于 1 月 12 日、13 日接触过疑似病例，而后在天津百货大厦 C 区工作，于 1 月 21 日开始发热，于 2 月 1 日确诊； Usr5 信息：Usr5 于 1 月 23 日下午 16 点到 23 点到过天津百货大厦 A、B、C 区，1 月 29 日开始发热，2 月 2 日确诊； 下面我们来建立一个传播路径的模型。</description></item><item><title>图数据库设计实践 | 存储服务的负载均衡和数据迁移</title><link>/nebula-website/cn/posts/nebula-graph-storage-banlancing-data-migration/</link><pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-storage-banlancing-data-migration/</guid><description>在文章《Nebula 架构剖析系列（一）图数据库的存储设计》中，我们提过分布式图存储的管理由 Meta Service 来统一调度，它记录了所有 partition 的分布情况，以及当前机器的状态。当 DBA 增减机器时，只需要通过 console 输入相应的指令，Meta Service 便能够生成整个 Balance 计划并执行。而之所以没有采用完全自动 Balance 的方式，主要是为了减少数据搬迁对于线上服务的影响，Balance 的时机由用户自己控制。
在本文中我们将着重讲解在存储层如何实现数据和服务的负载平衡。
简单回顾一下，Nebula Graph 的服务可分为 graph，storage，meta。本文主要描述对于存储层（storage）的数据和服务的 balance。这些都是通过 Balance 命令来实现的：Balance 命令有两种，一种需要迁移数据，命令为 BALANCE DATA ；另一种不需要迁移数据，只改变 partition 的 raft-leader 分布（负载均衡），命令为 BALANCE LEADER 。
本文目录 Balance 机制浅析 集群数据迁移 Step 1：准备工作 Step 1.1 查看现有集群状态 Step 1.2 创建图空间 Step 2 加入新实例 Step 3 迁移数据 Step 4 假如要中途停止 balance data Step 5 查看数据迁移结果 Step 6 Balance leader 批量缩容 示例数据迁移 Balance 机制浅析 在图数据库 Nebula Graph 中， Balance 主要用来 balance leader 和 partition，只涉及 leader 和 partition 在机器之间转移，不会增加或者减少 leader 和 partition 的数量。</description></item><item><title>Pick of the Week'20 | 第 3 周看点--Nebula Graph Studio 来了</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-17/</link><pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-17/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 3 个工作周的周五，春季大假离你还有不到 1 周时间，Are u ready 🌝 来和 Nebula 看下本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula Graph Studio 来了 Nebula Graph Studio 是一款可视化的图数据库 Web 应用，集构图、数据导入、图探索于一体，无缝连接图数据库，给用户带来全新的图数据库使用体验
安装包地址：https://github.com/vesoft-inc/nebula-web-docker 用户手册：https://github.com/vesoft-inc/nebula-web-docker/blob/master/docs/nebula-graph-studio-user-guide.md 使用过程中有任何问题欢迎前去 GitHub：https://github.com/vesoft-inc/nebula 或者添加 Nebula Graph 小助手（微信：NebulaGraphbot ）为好友来反馈哟~~
Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
Storage 层新增批量模式扫描接口，用于接入图计算和图神经网络。标签： Storage ，pr 参见链接： https://github.com/vesoft-inc/nebula/pull/1381 FETCH PROP 获取点的属性时，新增返回 VertexID；获取边的属性时，新增返回边的 src，dst， rank 值，标签： nGQL ，示例如下，pr 参见链接： https://github.</description></item><item><title>聊聊图数据库和图数据库的小知识 Vol.02</title><link>/nebula-website/cn/posts/graph-database-knowledge-volume-2/</link><pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/graph-database-knowledge-volume-2/</guid><description>2010 年前后，对于社交媒体网络研究的兴起带动了图计算的大规模应用。 2000 年前后热门的是 信息检索 和 分析 ，主要是 Google 的带动，以及 Amazon 的 e-commerce 所用的协同过滤推荐，当时 collaborative filtering也被认为是 information retrieval 的一个细分领域，包括 Google 的 PageRank 也是在信息检索领域研究较多。后来才是 Twitter，Facebook 的崛起带动了网络科学 network science的研究。 图理论和图算法不是新科学，很早就有，只是最近 20 年大数据，网络零售和社交网络的发展， big data、social networks、e-commerce 、IoT让图计算有了新的用武之地，而且硬件计算力的提高和分布式计算日益成熟的支持也使图在高效处理海量关联数据成为可能。
上文摘录了#聊聊图数据库和图数据库小知识# Vol.01 的【图数据库兴起的契机】，在本次第二期#聊聊图数据库和图数据库小知识#我们将了解以下内容，如果有感兴趣的图数据库话题，欢迎添加 Nebula 小助手微信号：NebulaGraphbot 为好友进群来交流图数据库心得。
本文目录 图数据库和图数据库设计 传统数据库通过设计良好的数据结构是不是可以实现图数据库的功能 图数据库会出于什么考虑做存储计算分离 数据量小，业务量小的情况下，是否单机部署图数据库性能也不错。 图数据库 shared-storage 和 shared-nothing 的比较 图数据库顶点和边输出及超级顶点输出优化 如何处理图数据库中大数据量的点？ Nebula Graph 实践细节 Nebula Graph 元数据（Meta Service）使用 etcd 吗？ Nebula Graph Cache 位于那一层 Nebula Graph 集群中的 Partition 多大 如何理解 Nebula Graph Partition ☺️ 图数据库和图数据库设计 在这个部分，我们会摘录一些图数据库设计通用的设计思路，或者已有图数据库的实践思考。</description></item><item><title>Pick of the Week'20 | 第 2 周看点--Nebula Graph UI 内测中</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-10/</link><pubDate>Fri, 10 Jan 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-10/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 2 个工作周的周五，距离阖家欢乐的春节还有 2 周不到的时间。来和 Nebula 看下本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula Graph UI 1.0 版本内测中 在本版本中你可以使用 GUI 来连接图数据库 Nebula Graph 服务，进行创建 Schema，数据导入并进行图探索。内测体验地址：https://github.com/vesoft-inc/nebula-web-docker，搭配使用文档使用更佳：https://github.com/vesoft-inc/nebula-web-docker/blob/master/nebula-graph-studio-user-guide.md
BTW，欢迎联系 Nebula 小助手参与测试哟 😊 Index 支持点边属性创建索引 Index Storage、Query Engine 已实现，支持对点边的属性建立索引，显示所有索引，查看索引详情、删除索引等操作，索引使用见下图，pr 参见 https://github.com/vesoft-inc/nebula/pull/1360、https://github.com/vesoft-inc/nebula/pull/1459、https://github.com/vesoft-inc/nebula/pull/1598，BTW，如果你试用 Index 过程中遇到任何问题，欢迎联系 nbot（Wechat：NebulaGraphbot ），我们会第一时间解决的~ Nebula 产品动态 Pick of the Week 每周会从 GitHub issue 及 pr 中选取重要的产品动态和大家分享，欢迎阅读本文的你关注我们的 GitHub：https://github.com/vesoft-inc/nebula 及时了解产品新动态~
删除 Tag / Edgetype / Space 时，支持 IF EXISTS 关键字。如果已存在 Tag / Edgetype / Space 则直接删除，不存在则直接返回。 标签： Schema ，pr 参见链接： https://github.</description></item><item><title>Jepsen 测试框架在图数据库 Nebula Graph 中的实践</title><link>/nebula-website/cn/posts/practice-jepsen-test-framework-in-nebula-graph/</link><pubDate>Thu, 09 Jan 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/practice-jepsen-test-framework-in-nebula-graph/</guid><description>​在本篇文章中主要介绍图数据库 Nebula Graph 在 Jepsen 这块的实践。
Jepsen 简介 Jepsen 是一款用于系统测试的开源软件库，致力于提高分布式数据库、队列、共识系统等的安全性。作者 Kyle Kingsbury 使用函数式编程语言 Clojure 编写了这款测试框架，并对多个著名的分布式系统和数据库进行了一致性测试。目前 Jepsen 仍在 GitHub 保持活跃，能否通过 Jepsen 的测试已经成为各个分布式数据库对自身检验的一个标杆。
Jepsen 的测试流程 Jepsen 测试推荐使用 Docker 搭建集群。默认情况下由 6 个 container 组成，其中一个是控制节点（control node），另外 5 个是数据库的节点（默认为 n1-n5）。控制节点在测试程序开始后会启用多个 worker 进程，并发地通过 SSH 登入数据库节点进行读写操作。
测试开始后，控制节点会创建一组进程，进程包含了待测试分布式系统的客户端。另一个 Generator 进程产生每个客户端执行的操作，并将操作应用于待测试的分布式系统。每个操作的开始和结束以及操作结果记录在历史记录中。同时，一个特殊进程 Nemesis 将故障引入系统。
测试结束后，Checker 分析历史记录是否正确，是否符合一致性。用户可以使用 Jepsen 的 knossos 中提供的验证模型，也可以自己定义符合需求的模型对测试结果进行验证。同时，还可以在测试中注入错误对集群进行干扰测试。
最后根据本次测试所规定的验证模型对结果进行分析。
如何使用 Jepsen 使用 Jepsen 过程中可能会遇到一些问题，可以参考一下使用 Tips：
在 Jepsen 框架中，用户需要在 DB 接口中对自己的数据库定义下载，安装，启动与终止操作。在终止后，可以将 log 文件清除，同时也可以指定 log 的存储位置，Jepsen 会将其拷贝至 Jepsen 的 log 文件夹中，以便连同 Jepsen 自身的 log 进行分析。 用户还需要提供访问自己数据库的客户端，这个客户端可以是你用 Clojure 实现的，比如 etcd 的verschlimmbesserung，也可以是 JDBC，等等。然后需要定义 Client 接口，告诉 Jepsen 如何对你的数据库进行操作。 在 Checker 中，你可以选择需要的测试模型，比如，性能测试（checker/perf）将会生成 latency 和整个测试过程的图表，时间轴（timeline/html）会生成一个记录着所有操作时间轴的 html 页面。 另外一个不可或缺的组件就是在 nemesis 中注入想要测试的错误了。网络分区（nemesis/partition-random-halves）和杀掉数据节点（kill-node）是比较常见的注入错误。 在 Generator 中，用户可以告知 worker 进程需要生成哪些操作，每一次操作的时间间隔，每一次错误注入的时间间隔等等。 用 Jepsen 测试图数据库 Nebula Graph 分布式图数据库 Nebula Graph 主要由 3 部分组成，分别是 meta 层，graph 层和 storage 层。</description></item><item><title>Pick of the Week'20 | 第 1 周看点--Nebula Graph 上 DB-Engine 图数据库榜单</title><link>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-03/</link><pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-weekly-pickup-2020-01-03/</guid><description>每周五 Nebula 为你播报每周看点，每周看点由本周大事件、用户问答、Nebula 产品动态和推荐阅读构成。
这是 2020 年第 1 个工作周的周五，🌝 美好的 2020 （2020 = 1024 + 996 &amp;amp; 2020 = 404 + 404 + 404 + 404 + 404）从这周开始。来和 Nebula 看下本周图数据库和 Nebula 有什么新看点~~
本周大事件 Nebula Graph 嘉年华活动回顾【视频实录】 本次嘉年华第一次采用线上直播同步线下的形式，我们将视频现场实录分为了 4 个部分：【图数据库简介】、【Nebula 架构介绍】、【如何为社区做贡献】和【将 CSV 数据导入图数据库】。下面摘录了【Nebula 架构介绍】部分的某个 Q&amp;amp;A
❓ 传统数据库通过设计良好的数据结构是不是可以实现图数据库的功能
Nebula：图数据库相对传统数据库优化点在于，数据模型。传统数据库是一个关系型，是一种表结构做 Join，但存储结构表明了很难支持多度拓展，比如一度好友，两度好友，一度还支持，使用一个 Select 和 Join 就可完成，但是二度查询开销成本较大，更别提多度 Join 查询开销更大。图数据库的存储结构为面向图存储，更利于查询多度关系。特别的，有些图上特有的操作，用关系型数据库比较难实现和表达，比如最短路径、子图、匹配特定规则的路径这些。
DB-Engine 2020 年 1 月图数据库趋势 Nebula Graph 第一次参加“打榜”暂列图数据库表单第 28 名，整体来说图数据库前十名的排名变化不大，DGraph 新晋前十，TigerGraph 第十名位置不保。</description></item><item><title>Nebula Graph in 2019：It's Worth the Effort</title><link>/nebula-website/cn/posts/nebula-graph-in-2019/</link><pubDate>Fri, 27 Dec 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-in-2019/</guid><description>一分钟 2019 这年，是 21 世纪第 2 个 10 年的最后 1 年，也是 Nebula Graph 诞生年，在 2019 年 5 月，我们开源了，和国内外的图数据库爱好者们分享了我们对图数据库的想法，有了自己的图数据库社区，Nebula Graph 团队也由最开始的 4 人团队发展到了现在 30 人的规模，在社区和团队的努力下，Nebula Graph 经历了从 0 到 1 的过程，从 alpha 到 v1.0.0-rc2 我们一直在变得更好。
硬核 2019 有人问：为什么要走开源路线 作为一个企业级产品，Nebula Graph 一开始就选择了走开源路线是很多企业不会走的路，这是我们的原因。
DB-Engines 告诉我们，开源数据库增长得快，考虑到数据库漫长的历史，开源数据库才是新出现的 DB 的主流方式。所以对于 Nebula Graph 来说，采用开源这条路是非常正常的。
分布式图数据库是一个全新的技术领域，采用开源的方式，能够更加容易让这个新技术渗透到潜在的客户，更快建立起图数据库的生态环境，开源大幅降低爱好者和客户的试用和获取成本，可以更快的迭代和完善产品。此外，开源项目没有国界，国际化发展可以更容易。
又有人问：为何要自研图数据库 由于社交网络、支付网络的兴起，网络（图）的基础设施得到了极大的刺激和发展。但是即使到目前为止，市面上并没有很好的图数据库产品。特别是在 OLTP 这块，主要产品的表现其实都不够好，是不能支撑 5G 时代的大数据量访问的。还有人问：你们的数据库又有什么亮点，为何采用存储、计算分离的方式 存储计算分离是个很热的话题。我们将存储模块和 Query Engine 层分开主要有以下考虑。
成本的原因。存储和计算对计算机资源要求不一样，存储依赖 I/O，计算对 CPU 和内存的要求更高，业务在不同的应用或者发展时期，需要不同的存储空间和计算能力配比，存储和计算的耦合会使得机器的选型会比较复杂，存储计算分离的架构，使得 storage 的 scale out/in 更容易。 存储层抽象出来可以给计算带来新的选择，比如对接 Pregel，Spark GraphX 这些计算引擎。通常来说，图计算对于存储的要求是吞吐量优先的，而在线查询是时延优先的。通过把存储层分离出来，不管是开发（做 QoS ）还是运维（单独集群部署）的时候，都会更容易一些。 在云计算场景下，能实现真正的弹性计算。 有人说：开源六个多月，你们产品进展一如初衷吗？ 这是 Nebula Graph 2019 取得产品成绩，我们发布了 4 个版本，从零开始，到现在支持 Index、Spark 等社区伙伴密切关注的功能点。</description></item><item><title>Github Statistics 一个基于 React 的 GitHub 数据统计工具</title><link>/nebula-website/cn/posts/introduction-to-react-based-github-statistics/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/introduction-to-react-based-github-statistics/</guid><description>V 站曾经有个热帖说为何我的开源项目只有 Fork 没有 Star，楼下有个热评说开源项目关注的不应该是 Commit 数据吗？先不论 Star、Fork 和 Commit，issue 、pr 也应是一个开源项目社区关注的数据。
下面我们来看看市面上有哪些 GitHub 数据统计工具
GitHub Star 数据统计工具 Chrome 插件—— Star History 顾名思义你可以通过 Star History 这个项目看到一个项目的趋势增长，安装上此插件之后你可以直接在某个开源项目主页，如下图所示，一键操作看 star 增长趋势无烦恼。
当然它也有在线版：https://star-history.t9t.io/ 可以戳这个链接体验。
在线版 —— StarTrack-js StarTrack 和 Star History 类似也是一个 Star 统计工具，操作稍繁琐，需要填入该项目所有者的用户名及项目名，下图以 VEsoft-inc 的 Nebula 项目为例：
除了简单的 Star 趋势图，StarTrack 还为你统计了这个项目的 Star 总数、开源时间及每日获得 Star 数等维度数据。
GitHub 数据统计工具—— Github Statistics 不只是 Fork 数和 Commit 数，统计 issue 数的工具在 Google 搜索也是查无此项（如果你有知道此类工具欢迎在评论文留言 👏），GitHub Statistics 是据我所知唯一的可以统计某个开源项目的指标数，包括 GitHub Star、Fork、Commit、issue 和 pr 等数据的工具，当然 GitHub Statistics 也支持你查看项目的 Release 信息，在线体验：https://vesoft-inc.</description></item><item><title>分布式图数据库 Nebula Graph 中的集群快照实践</title><link>/nebula-website/cn/posts/introduction-to-snapshot-in-nebula-graph/</link><pubDate>Fri, 06 Dec 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/introduction-to-snapshot-in-nebula-graph/</guid><description>1 概述 1.1 需求背景 图数据库 Nebula Graph 在生产环境中将拥有庞大的数据量和高频率的业务处理，在实际的运行中将不可避免的发生人为的、硬件或业务处理错误的问题，某些严重错误将导致集群无法正常运行或集群中的数据失效。当集群处于无法启动或数据失效的状态时，重新搭建集群并重新倒入数据都将是一个繁琐并耗时的工程。针对此问题，Nebula Graph 提供了集群 snapshot 的创建功能。
Snapshot 功能需要预先提供集群在某个时间点 snapshot 的创建功能，以备发生灾难性问题时用历史 snapshot 便捷地将集群恢复到一个可用状态。
1.2 术语 本文主要会用到以下术语：
StorageEngine：Nebula Graph 的最小物理存储单元，目前支持 RocksDB 和 HBase，在本文中只针对 RocksDB。 Partition：Nebula Graph 的最小逻辑存储单元，一个 StorageEngine 可包含多个 Partition。Partition 分为 leader 和 follower 的角色，Raftex 保证了 leader 和 follower 之间的数据一致性。 GraphSpace：每个 GraphSpace 是一个独立的业务 Graph 单元，每个 GraphSpace 有其独立的 tag 和 edge 集合。一个 Nebula Graph 集群中可包含多个 GraphSpace。 checkpoint：针对 StorageEngine 的一个时间点上的快照，checkpoint 可以作为全量备份的一个 backup 使用。checkpoint files是 sst files 的一个硬连接。 snapshot：本文中的 snapshot 是指 Nebula Graph 集群的某个时间点的快照，即集群中所有 StorageEngine 的 checkpoint 的集合。通过 snapshot 可以将集群恢复到某个 snapshot 创建时的状态。 wal：Write-Ahead Logging ，用 raftex 保证 leader 和 follower 的一致性。 2 系统构架 2.</description></item><item><title>分布式图数据库 Nebula RC2 发布：增强了 CSV Importer 功能</title><link>/nebula-website/cn/posts/nebula-graph-rc2-release-note/</link><pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-rc2-release-note/</guid><description>Nebula Graph 是开源的分布式图数据库，可应用于知识图谱、社交推荐、风控、IoT 等场景。
本次 RC2 主要新增 GO FROM ... REVERSELY 和 GROUP BY 等语句，Storage Engine 也更灵活，用户可以通过 Console 或 Http 获取配置信息，触发 compaction；客户端目前支持 Python，Java，Go；在工具方面，增强了 CSV Importer 功能
Query Engine 支持 GROUP BY 语句用于聚合函数，根据一个或多个属性对结果集进行分组。 #749 UPDATE CONFIGS 增加对表达式的支持 #1273 支持通过 Console 更改日志级别 #1273 新增 “IF&amp;hellip;RETURN&amp;hellip;”，条件成立时返回对应结果，提供一定的 if else 逻辑能力 #1233 、#1246 String 数据类型支持无限长度 #1103 插入点边时，和 SQL一样，允许按用户输入的属性名顺序来插入（而不是 Schema 的属性名顺序）#1219 Tag/Edgetype 属性支持设置默认值 #860 新增 GO FROM ... REVERSELY ，查询反向关系 #1349 Storage 新增 SHOW PARTS 获取当前 SPACE 的 partition 详情 #1086 新增 BALANCE STOP 暂停 load balance #1238 支持通过手动触发 RocksDB compaction 和 flush #677、#1240 RocksDB 默认 BlockBasedTable 大小从 4 MB 改成 1024 MB #1248 gflags 中新增 max_edge_returned_per_vertex 选项，限制超级顶点返回边数量 #1221 Storage 增加对点的缓存#1294 #1268 升级依赖库 folly、fbthrift #1161 Tools 优化 CSV Importer，新增 CSV Importer 镜像，用户可以使用 Docker 导入 CSV 数据，详情请见 https://github.</description></item><item><title>使用图数据库 Nebula Graph 数据导入快速体验知识图谱 OwnThink</title><link>/nebula-website/cn/posts/import-ownthink-knowledge-graph-data-to-nebula-graph/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/import-ownthink-knowledge-graph-data-to-nebula-graph/</guid><description>前言 本文由 Nebula Graph 实习生@王杰贡献。
最近 @Yener 开源了史上最大规模的中文知识图谱——OwnThink（链接：https://github.com/ownthink/KnowledgeGraphData ），数据量为 1.4 亿条。
本文介绍如何将这份数据快速导入图数据库 Nebula Graph，全过程大约需要 30 分钟。
中文知识图谱 OwnThink 简介 思知（OwnThink） 知识图谱是由 Google 在 2012 年提出来的一个概念。主要是用来描述真实世界中存在的各种实体和概念，以及他们之间的关系。在搜索引擎、问答机器人、知识抽取等多个领域有着诸多应用。
最近 Yener 开源了史上最大规模的中文知识图谱—— OwnThink（链接：https://github.com/ownthink/KnowledgeGraphData），数据量为 1.4 亿条。数据以 (实体, 属性, 值) 和 (实体, 关系, 实体) 混合的三元组形式存储，数据格式为 csv。
可以点击这里下载：https://nebula-graph.oss-accelerate.aliyuncs.com/ownthink/kg_v2.tar.gz
查看原始文件 由于 ownthink_v2.csv 数据过多，摘录部分数据为例：
红色食品,描述,红色食品是指食品为红色、橙红色或棕红色的食品。 红色食品,是否含防腐剂,否 红色食品,主要食用功效,预防感冒，缓解疲劳 红色食品,用途,增强表皮细胞再生和防止皮肤衰老 大龙湫,描述,雁荡山景区分散，东起羊角洞，西至锯板岭；南起筋竹溪，北至六坪山。 大龙湫,中文名称,大龙湫 大龙湫,外文名称,big dragon autrum 大龙湫,门票价格,50元 大龙湫,著名景点,芙蓉峰 姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉 这里的 (红色食品,是否含防腐剂,否) 就是典型的 (实体, 属性, 值) 形式的三元组数据; 而 (姚明[中国篮球协会主席、中职联公司董事长],妻子,叶莉) 是典型的 (实体, 关系, 实体) 形式的三元组数据。</description></item><item><title>Nebula 架构剖析系列（二）图数据库的查询引擎设计</title><link>/nebula-website/cn/posts/nebula-graph-query-engine-overview/</link><pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-query-engine-overview/</guid><description>摘要 上文（存储篇）说到数据库重要的两部分为存储和计算，本篇内容为你解读图数据库 Nebula 在查询引擎 Query Engine 方面的设计实践。
在 Nebula 中，Query Engine 是用来处理 Nebula 查询语言语句（nGQL）。本篇文章将带你了解 Nebula Query Engine 的架构。
上图为查询引擎的架构图，如果你对 SQL 的执行引擎比较熟悉，那么对上图一定不会陌生。Nebula 的 Query Engine 架构图和现代 SQL 的执行引擎类似，只是在查询语言解析器和具体的执行计划有所区别。
Session Manager Nebula 权限管理采用基于角色的权限控制（Role Based Access Control）。客户端第一次连接到 Query Engine 时需作认证，当认证成功之后 Query Engine 会创建一个新 session，并将该 session ID 返回给客户端。所有的 session 统一由 Session Manger 管理。session 会记录当前 graph space 信息及对该 space 的权限。此外，session 还会记录一些会话相关的配置信息，并临时保存同一 session 内的跨多个请求的一些信息。
客户端连接结束之后 session 会关闭，或者如果长时间没通信会切为空闲状态。这个空闲时长是可以配置的。客户端的每个请求都必须带上此 session ID，否则 Query Engine 会拒绝此请求。
Storage Engine 不管理 session，Query Engine 在访问存储引擎时，会带上 session 信息。</description></item><item><title>Dev 日志 | 一次 Segmentation Fault 和 GCC Illegal Instruction 编译问题排查</title><link>/nebula-website/cn/posts/segmentation-fault-gcc-illegal-instruction-trouble-shooting/</link><pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/segmentation-fault-gcc-illegal-instruction-trouble-shooting/</guid><description>摘要 笔者最近在重新整理和编译 Nebula Graph 的第三方依赖，选出两个比较有意思的问题给大家分享一下。
Flex Segmentation Fault——Segmentation fault (core dumped) 在编译 Flex 过程中，遇到了 Segmentation fault：
make[2]: Entering directory &amp;#39;/home/dutor/flex-2.6.4/src&amp;#39; ./stage1flex -o stage1scan.c ./scan.l make[2]: *** [Makefile:1696: stage1scan.c] Segmentation fault (core dumped) 使用 gdb 查看 coredump：
Core was generated by `./stage1flex -o stage1scan.c ./scan.l'. Program terminated with signal SIGSEGV, Segmentation fault. #0 flexinit (argc=4, argv=0x7ffd25bea718) at main.c:976 976 action_array[0] = '\0'; (gdb) disas Dump of assembler code for function flexinit: 0x0000556c1b1ae040 &amp;lt;+0&amp;gt;: push %r15 0x0000556c1b1ae042 &amp;lt;+2&amp;gt;: lea 0x140fd(%rip),%rax # 0x556c1b1c2146 .</description></item><item><title>COSCon'19 | 如何设计新一代的图数据库 Nebula</title><link>/nebula-website/cn/posts/coscon-2019-nebula-graph-database/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/coscon-2019-nebula-graph-database/</guid><description>11 月 2 号 - 11 月 3 号，以“大爱无疆，开源无界”为主题的 2019 中国开源年会（COSCon&amp;rsquo;19）正式启动，大会以开源治理、国际接轨、社区发展和开源项目为切入点同全球开源爱好者们共同交流开源。
作为图数据库技术的代表，Nebula Graph 总监——吴敏在本次大会上将会讲述了大规模分布式图数据库设计思考和实践。在信息爆发式增长和内容平台遍地开花的信息时代，图数据库在当中扮演了什么样的角色？同传统数据库相比，图数据库又有什么优势？图数据库开发需要哪些新技术？就此，开源社特访吴敏来分享下图数据库主题内容，从图数据 Nebula 的研发开始，就传统数据库面临的挑战，开源模式的优势，Nebula 的社区开展和产品规划等问题进行深入解析。
About Nebula 总监&amp;ndash;吴敏 开源社：Hi，吴敏，先和大家介绍下自己。 大家好，我是吴敏，VEsoft 总监，博士毕业于浙江大学。 曾就职于阿里云、蚂蚁金服，从事分布式图数据库以及云存储相关工作。
开源社：谈谈您在 COSCon&amp;rsquo;19 上的分享话题。 随着抖音、小红书等社交内容平台的爆红诞生了一种基于社交关系网路的推荐需求，而以垂直领域作为切入点的知识图谱过去两年的“爆火”，传统数据库在处理社交推荐、风控、知识图谱方面的性能缺陷，图数据库的研发应运而生。
本演讲开篇将陈述图数据库行业现状，让你对图数据库存储的数据及对场景有所了解，再从开源的分布式图数据库 Nebula Graph 切入深度讲解大规模分布式图数据库应该如何设计存储、计算及架构，最后讲述开源对图数据库开发的影响。
内容大纲
图数据库概述及应用 Nebula Graph 设计介绍 技术细节 开源社区及服务 开源社：哪些人可以应该了解这个内容？ 对图数据库有兴趣，或是有推荐、风控、知识图谱等业务场景需求的人。
Nebula 研发之旅 开源社：为什么给图数据库取名 Nebula ？ Nebula 是星云的意思，很大嘛，也是漫威宇宙里面漂亮的星云小姐姐。对了，Nebula的发音是：[ˈnɛbjələ]
开源社：现在数据库领域百花齐放，国产的 OceanBase 和 TiDB 都发展得不错，为什么还要研发 Nebula 这样的图数据库？ OceanBase、TiDB 这类 NewSQL 最近发展势头很强劲，他们的出现更多的是对传统单机的关系型数据库在可用性的补充。Nebula 聚焦在图数据库这一领域，也是近年来在数据库各分支中增长最为快速的领域。图数据库使用图（或者网）的方式很直接、自然的表达现实世界的关系: 用节点来表示实体，边来表示关联关系，everything is connected。能高效的提供图检索，提供专业的分析算法、工具，比如 ShortestPath、PageRank、标签传播等等。
开源社：图数据库应用场景有哪些？ 典型的应用场景有社交网络，金融风控，推荐引擎，知识图谱等。
社交网络，比如，推荐一条最短路径让我结识迪纳热巴，还可以加上筛选条件，路径中的每个人都是单身女性。
金融风控场景，比如，去查一个信用卡反套现的网络。很典型的一个场景，A 转账到 B，B 转账到 C，C 又转回给 A 即是一个典型的闭环。对于这样的闭环，这类查询在图数据库大规模应用之前，大部分都是采用离线计算的方式去查找，但是离线场景很难去控制当前发生的这笔交易。一个信用卡交易或者在线贷款，整个作业流程很长，而在反套现这块的审核时间又限制在毫秒级，这就是图数据库非常大的一个应用场景。</description></item><item><title>图数据库 Nebula Graph RC1 Release Note</title><link>/nebula-website/cn/posts/nebula-graph-rc1-release-note/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-rc1-release-note/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
图数据库 Nebula RC1 主要更新 本次 RC1 主要增强了 nGQL，新增 LIMIT , GROUP BY 等语句；算法方面增加了最短路径，全路径搜索。 Storage 层新增 PUT/GET 接口，支持 scale out/in，以及新增了 Golang 客户端以及多线程 Golang 数据导入工具。
nGQL 新增 LIMIT 指定返回的记录数。(#750) 管道操作中支持 YIELD 指定返回类型。(#745) 新增 ORDER BY 对结果集进行排序 (#537) 新增 udf_is_in 来查询特定集合的数据。(#1096) 新增 DELETE VERTEX 删除指定的 vertex 和相关联的出入边。 (#868) 新增 UUID() 函数生成唯一值. (#958, #961, #1031) 支持逻辑运算符 XOR、OR、AND 和 NOT. (#858) 支持 TIMESTAMP 数据类型. (#843) 针对 STRING 数据类型，支持更多函数操作，比如 upper(), trim(), lower(), substr() 等.</description></item><item><title>Nebula 架构剖析系列（一）图数据库的存储设计</title><link>/nebula-website/cn/posts/nebula-graph-storage-engine-overview/</link><pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-storage-engine-overview/</guid><description>摘要 在讨论某个数据库时，存储 ( Storage ) 和计算 ( Query Engine ) 通常是讨论的热点，也是爱好者们了解某个数据库不可或缺的部分。每个数据库都有其独有的存储、计算方式，今天就和图图来学习下图数据库 Nebula Graph 的存储部分。
Nebula 的 Storage 包含两个部分， 一是 meta 相关的存储， 我们称之为 Meta Service ，另一个是 data 相关的存储， 我们称之为 Storage Service。 这两个服务是两个独立的进程，数据也完全隔离，当然部署也是分别部署， 不过两者整体架构相差不大，本文最后会提到这点。 如果没有特殊说明，本文中 Storage Service 代指 data 的存储服务。接下来，大家就随我一起看一下 Storage Service 的整个架构。 Let&amp;rsquo;s go~
Architecture 图一 storage service 架构图
如图1 所示，Storage Service 共有三层，最底层是 Store Engine，它是一个单机版 local store engine，提供了对本地数据的 get / put / scan / delete 操作，相关的接口放在 KVStore / KVEngine.h 文件里面，用户完全可以根据自己的需求定制开发相关 local store plugin，目前 Nebula 提供了基于 RocksDB 实现的 Store Engine。</description></item><item><title>Nebula 架构剖析系列（零）图数据库的整体架构设计</title><link>/nebula-website/cn/posts/nebula-graph-architecture-overview/</link><pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-architecture-overview/</guid><description>Nebula Graph 是一个高性能的分布式开源图数据库，本文为大家介绍 Nebula Graph 的整体架构。
一个完整的 Nebula 部署集群包含三个服务，即 Query Service，Storage Service 和 Meta Service。每个服务都有其各自的可执行二进制文件，这些二进制文件既可以部署在同一组节点上，也可以部署在不同的节点上。
Meta Service 上图为 Nebula Graph 的架构图，其右侧为 Meta Service 集群，它采用 leader / follower 架构。Leader 由集群中所有的 Meta Service 节点选出，然后对外提供服务。Followers 处于待命状态并从 leader 复制更新的数据。一旦 leader 节点 down 掉，会再选举其中一个 follower 成为新的 leader。
Meta Service 不仅负责存储和提供图数据的 meta 信息，如 schema、partition 信息等，还同时负责指挥数据迁移及 leader 的变更等运维操作。
存储计算分离 在架构图中 Meta Service 的左侧，为 Nebula Graph 的主要服务，Nebula 采用存储与计算分离的架构，虚线以上为计算，以下为存储。
存储计算分离有诸多优势，最直接的优势就是，计算层和存储层可以根据各自的情况弹性扩容、缩容。
存储计算分离还带来的另一个优势：使水平扩展成为可能。
此外，存储计算分离使得 Storage Service 可以为多种类型的个计算层或者计算引擎提供服务。当前 Query Service 是一个高优先级的计算层，而各种迭代计算框架会是另外一个计算层。
无状态计算层 现在我们来看下计算层，每个计算节点都运行着一个无状态的查询计算引擎，而节点彼此间无任何通信关系。计算节点仅从 Meta Service 读取 meta 信息，以及和 Storage Service 进行交互。这样设计使得计算层集群更容易使用 K8s 管理或部署在云上。</description></item><item><title>Nebula Graph 技术总监陈恒：图数据库怎么和深度学习框架进行结合？</title><link>/nebula-website/cn/posts/integrate-graph-database-with-deep-learning-framework/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/integrate-graph-database-with-deep-learning-framework/</guid><description>Nebula Graph 的技术总监在 09.24 - 09.30 期间同 开源中国·高手问答 的小伙伴们以「图数据库的设计和实践」为切入点展开讨论，包括：「图数据库的存储设计」、「图数据库的计算设计」、「图数据库的架构设计」等方面内容，本文整理于他和开源中国小伙伴对图数据库的讨论内容~
嘉宾·陈恒介绍 陈恒，开源的分布式图数据库 Nebula Graph 技术总监，图数据库领域专家 &amp;amp; HBase Committer。北京邮电大学硕士，曾就职于蚂蚁金服、猿题库、网易等公司，一直从事基础设施相关研发工作。
本文目录 图数据库怎么和深度学习框架进行结合？ 图数据库它可以被认为是 MySQL 中的一种数据库引擎，具备特殊的查询功能，以及特殊的数据结构？ Nebula 和 Neo4j 的图数据库的优势和劣势？为何要新开发使用 Nebula ？ 图数据库目前主要用于哪些应用场景? 图数据库和一般数据库结构相比，优势在哪里？ Nebula 的实践问题 存储计算分离 Nebula 高度可扩展具体指的是什么？存储层是否还支持其他类型的数据库？ 「图数据库」是基于已有数据库衍生出来的产品吗？如何设计图数据库？ 图数据库为何没有通用的图查询语言？ 图数据库适合存储什么类型数据，比如树形目录？ Nebula 的部署安装配置要求是什么？ 图数据库怎么和深度学习框架进行结合？ Stiofan： 图数据库打破了关系数据库的这种古老数据存储模式，将图形化特性属性数据存入，但是关于这些特性化属性的数据使用图数据库和将其转换为类型数据放入深度学习框架，两个之间的关系或者说使用场景应如何来规划。
我们见过一些机器学习使用图数据库的 case，最主要的是 feature extraction 阶段，使用图数据库来拿到当前点相关联的点的一些属性作为 feature，或者产生一些随机游走的路径，使用图数据库可以大大加速整个过程。
图数据库它可以被认为是 MySQL 中的一种数据库引擎，具备特殊的查询功能，以及特殊的数据结构？ 钛元素： 恒大你好，我对图数据库不是很明白，是否可以这样理解：它可以被认为是 MySQL 中的一种数据库引擎，具备特殊的查询功能，以及特殊的数据结构？谢谢。
不是特别准确， 图数据库是为了网络结构的数据（比如社交网络，资金网络等）而专门设计的一类数据库。 这类的数据库有着自己独特的数据组织形式， 以及自己独特的查询语句。 它并不是 MySQL 中的一种存储引擎， 而是一个独立的产品，就像 HBase 与 MySQL 的关系一样。</description></item><item><title>图数据库爱好者的聚会在谈论什么？</title><link>/nebula-website/cn/posts/graph-database-fans-chat/</link><pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/graph-database-fans-chat/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
聚会概述 在上周六的聚会中，Nebula Graph Committer 吴敏给爱好者们介绍了整体架构和特性，并随后被各位大佬轮番蹂躏（划掉）。
本次分享主要介绍了 Nebula Graph 的特性，以及新上线的《使用 Docker 构建 Nebula Graph》功能。
下面是现场的 Topic ( 以下简称：T ) &amp;amp; Discussion ( 以下简称：D ) 速记：
讨论话题目录 算法和语言 图库的 builtin 只搞在线查询可以吗？有必要搞传播算法和最短路径吗？Nebula 怎么实现对图分析算法的支持？ 为什么要新开发一种查询语言 nGQL？做了哪些优化？ 对于超大点，有啥优化的办法吗，或者对于构图有什么建议嘛？ 图库相比其它系统和数据库未来发展趋势，比如相比文档和关系型，它的核心价值是什么？ 架构和工程 key 为什么选择用 hash 而不是 range？ gRPC，bRPC，fbthrift 为什么这么选 rpc？有没有打算自己写一个？ 图库在设计上趋同化和同质化，架构上还有哪些创新值得尝试？ 关于生态 图的生态怎么打造？和周边其它系统怎么集成融合？ 算法和语言 🙋 T: 图库的 builtin 只搞在线查询可以吗？有必要搞传播算法和最短路径吗？Nebula 怎么实现对图分析算法的支持？</description></item><item><title>使用 Docker 构建 Nebula Graph 源码</title><link>/nebula-website/cn/posts/build-nebula-graph-source-code-with-docker/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/build-nebula-graph-source-code-with-docker/</guid><description>Nebula Graph 介绍 Nebula Graph 是开源的高性能分布式图数据库。项目使用 C++ 语言开发，cmake 工具构建。其中两个重要的依赖是 Facebook 的 Thrift RPC 框架和 folly 库.
由于项目采用了 C++ 14 标准开发，需要使用较新版本的编译器和一些三方库。虽然 Nebula Graph 官方给出了一份开发者构建指南，但是在本地构建完整的编译环境依然不是一件轻松的事。
开发环境构建 Nebula Graph 依赖较多，且一些第三方库需本地编译安装，为了方便开发者本地编译项目源码， Nebula Graph 官方为大家提供了一个预安装所有依赖的 [docker 镜像](docker hub)。开发者只需如下的三步即可快速的编译 Nebula Graph 工程，参与 Nebula Graph 的开源贡献：
本地安装好 Docker
将 vesoft/nebula-dev 镜像 pull 到本地
$ docker pull vesoft/nebula-dev 运行 Docker 并挂载 Nebula 源码目录到容器的 /home/nebula 目录 $ docker run --rm -ti -v {nebula-root-path}:/home/nebula vesoft/nebula-dev bash 感谢社区伙伴 @阿东 提的建议，把上面的 {nebula-root-path} 替换成你 Nebula Graph 实际 clone 的目录</description></item><item><title>聊聊图数据库和图数据库的小知识</title><link>/nebula-website/cn/posts/graph-database-knowledge-volume-1/</link><pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/graph-database-knowledge-volume-1/</guid><description>图数据库 - 维基百科：在计算机科学中，图数据库（英语：graph database，GDB）是一个使用图结构进行语义查询的数据库，它使用节点、边和属性来表示和存储数据。该系统的关键概念是图，它直接将存储中的数据项，与数据节点和节点间表示关系的边的集合相关联。这些关系允许直接将存储区中的数据链接在一起，并且在许多情况下，可以通过一个操作进行检索。图数据库将数据之间的关系作为优先级。查询图数据库中的关系很快，因为它们永久存储在数据库本身中。可以使用图数据库直观地显示关系，使其对于高度互连的数据非常有用。
图数据库是一种非关系型数据库，以解决现有关系数据库的局限性。图模型明确地列出了数据节点之间的依赖关系，而关系模型和其他 NoSQL 数据库模型则通过隐式连接来链接数据。图数据库从设计上，就是可以简单快速地检索难以在关系系统中建模的复杂层次结构的。图数据库与 20 世纪 70 年代的网络模型数据库相似，它们都表示一般的图，但是网络模型数据库在较低的抽象层次上运行，并且不能轻松遍历一系列边。
图数据库的底层存储机制可能各有不同。有些依赖于关系引擎并将图数据“存储”到表中（虽然表是一个逻辑元素，但是这种方法在图数据库、图数据库管理系统和实际存储数据的物理设备之间施加了另一层抽象）。另一些则使用键值存储或面向文档的数据库进行存储，使它们具有固有的 NoSQL 结构。大多数基于非关系存储引擎的图数据库还添加了标记或属性的概念，这些标记或属性本质上是具有指向另一个文档的指针的关系。这样就可以对数据元素进行分类，以便于集中检索。
从图数据库中检索数据需要 SQL 之外的查询语言，SQL是为了处理关系系统中的数据而设计的，因此无法“优雅地”处理遍历图。截至 2017 年，没有一个像 SQL 那样通用的图查询语言，通常都是仅限与一个产品的。不过，已经有一些标准化的工作，使得 Gremlin、SPARQL 和 Cypher 成为了多供应商查询语言。除了具有查询语言接口外，还可以通过应用程序接口（API）访问一些图数据库。
图数据库与图计算引擎不同。图数据库是转换关系 OLTP 数据库的技术。而图计算引擎在 OLAP 中用于批量分析。由于主要技术公司在使用专有图数据库方面的成功以及开源图数据库的引入，图数据库在 2000 年代引起了相当大的关注。
上面部分引用了维基百科对图数据库的词条来讲解何为图数据库，而本文整理于图数据库 Nebula Graph 交流群中对图数据库的零碎知识，作为对图数据库知识的补充。本文分为小知识及 Q&amp;amp;A 两部分。
本文主目录 小知识 图数据库兴起的契机 图数据库存储方式 —— 基于内存存储 vs 基于分布式 kv 存储  一种图数据库存储层的设计探讨 图结构的可视化与 GIS 数据的可视化 Q&amp;amp;A 提问回答 图数据库计算存储分离设计及该设计模式的考量原因 怎么理解图数据库顶点和标签 Nebula 如何处理 ID 冲突问题 Nebula Graph 和 Tiger Graph 的区别 图数据库 0 标签的意义 大家怎么看「图数据库要有索引」这个问题？ 在知识图谱场景下计算、存储及副本一致性问题 小知识 学习图数据库的起手式——了解图数据库兴起的契机。</description></item><item><title>图数据库 Nebula Graph v.1.0.0-beta 已上线</title><link>/nebula-website/cn/posts/nebula-graph-beta-release-note/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-beta-release-note/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
Nebula Graph v1.0.0-beta 版本已发布，更新内容如下:
Storage Engine 支持集群部署 引入 Raft 一致性协议，支持 Leader 切换 存储引擎支持 HBase 新增从 HDFS 导入数据功能 查询语言 nGQL 新增注释功能 创建 Space 支持默认属性，新增 SHOW SPACE 和 DROP SPACE 功能 新增获取某 Tag 或 EdgeType 属性功能 新增获取某 Tag 或 EdgeType 列表功能 新增 DISTINCT 过滤重复数据 新增 UNION ， INTERSECT 和 MINUS 集合运算 新增 FETCH 获取指定 Vertex 相应 Tag 的属性值 WHERE 和 YIELD 支持用户定义变量和管道操作 WHERE 和 YIELD 支持算术和逻辑运算 新增 ORDER BY 对结果集排序 支持插入多条点或边 支持 HOSTS 的 CRUD 操作 Tools 新增 Java importer - 从 CSV 导入数据 package_build - 支持 Linux 发行指定版本的软件包 perf tool - Storage Service 压测工具 Console 支持关键字自动补全功能 ChangeLog $$[tag].</description></item><item><title>图数据库 Nebula Graph 的安装部署</title><link>/nebula-website/cn/posts/nebula-graph-database-deployment/</link><pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-database-deployment/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
本文目录 简介 Nebula 整体架构 Meta Service Storage Service Graph Service 安装部署 单机运行 集群部署 环境准备 安装 配置 测试集群 简介 Nebula Graph 是开源的第三代分布式图数据库，不仅能够存储万亿个带属性的节点和边，而且还能在高并发场景下满足毫秒级的低时延查询要求。不同于 Gremlin 和 Cypher，Nebula 提供了一种 SQL-LIKE 的查询语言 nGQL，通过三种组合方式（管道、分号和变量）完成对图的 CRUD 的操作。在存储层 Nebula Graph 目前支持 RocksDB 和 HBase 两种方式。
感谢 Nebula Graph 社区 Committer 伊兴路供稿本文。
Nebula Graph 整体架构 Nebula Graph 主要有三个服务进程：
Meta Service Meta Service 是整个集群的元数据管理中心，采用 Raft 协议保证高可用。主要提供两个功能:</description></item><item><title>Vol.03 nMeetup | 图数据库综述与 Nebula 在图数据库设计的实践</title><link>/nebula-website/cn/posts/nebula-graph-design-in-practice/</link><pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-design-in-practice/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
第三期 nMeetup( nMeetup 全称：Nebula Graph Meetup，为由开源的分布式图数据库 Nebula Graph 发起的面向图数据库爱好者的线下沙龙) 活动于 2019 年 8 月 3 日在上海陆家嘴的汇丰银行大楼举办，我司 CEO &amp;ndash; Sherman 在活动中发表《 Nebula Graph Internals 》主题演讲 。本篇文章是根据此次演讲所整理出的技术干货，全文阅读需要 30 分钟，我们一起打开图数据库的知识大门吧~
大家好，非常感谢大家今天能够来我们这个线下沙龙，天气很热，刚又下了暴雨，说明大家对图数据库的热情要比夏天温度要高。今天我们准备了几个 topic，一个就是介绍一下我们产品——Nebula 的一些设计思路，今天不讲介绍性东西，主要讲 Nebula 内部的思考——为什么会去做 Nebula，怎么样去做，以及为什么会采取这样的设计思路。
这个就是 Nebula。先从 overview 介绍图数据库到底是个什么东西，然后讲我们对图数据库的一些思考。最后具体介绍两个模块， Nebula 的 Query Service 和 Storage Service。后面两部分会稍微偏技术一些，在这个过程当中如果大家遇到什么问题，欢迎随时提出。
图数据库是什么 图领域的 OLAP &amp;amp; OLTP 场景 对于图计算或者图数据库本身我们是这么理解的，它跟传统数据库很类似，也分为 OLAP 和 OLTP 两个方向。
上图中下面这根轴表示数据对查询时效性的要求，OLAP 更偏向于做离线分析，OLTP 更偏向于线上处理。我们认为图领域也可以这么划分。
首先在 OLAP 这个领域，我们称为图计算框架，这些图计算框架的主要目的，是做分析。基于图的结构的分析——这里图代指一个关系网络。整体上这个分析比较类似于传统数据库的 OLAP。但一个主要特点就是基于图结构的迭代算法，这个在传统数据库上是没有的。最典型的算法是谷歌 PageRank，通过一些不断的迭代计算，来算网页的相关度，还有非常常见的 LPA 算法，使用的也非常多。</description></item><item><title>图数据库 Nebula Graph 在 HBaseCon Asia2019 的分享实录</title><link>/nebula-website/cn/posts/nebula-graph-in-hbasecon-asia-2019/</link><pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-in-hbasecon-asia-2019/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
本篇导读 HBaseCon Asia2019 活动于 2019 年 7 月 20 日于北京金隅喜来登酒店举办，应主办方邀请，Nebula Graph 技术总监-陈恒在活动中发表演讲 “Nebula: A Graph DB based on HBase” 。本篇文章是根据此次演讲所整理出的技术干货，全文阅读需要 30 分钟。
大家下午好，我是陈恒，来自 VESoft，是开源图数据库 Nebula Graph 的开发者。同时，我也是 HBase 的 Commiter（刚才在后面和各位大佬谈笑风生），今天和大家分享的，是我们最近刚开源的分布式图数据库 Nebula Graph。
Nebula Graph 简要介绍 首先，介绍一下我们公司：欧若数网科技有限公司（英文名：VESoft），是 2018 年 10 月份成立的。我们的核心产品是分布式图数据库 Nebula Graph，这个项目从开始到现在，大概做了半年多时间。目前已经 release alpha 版本，还有可以试用的 docker，正式的 release 预计会在 10 月份。
NebulaGraph 是完全开源的，可以在 GitHub 上访问 https://www.github.com/vesoft-inc/Nebula
NoSQL 类数据库的发展趋势 下面我们看一张图，是 DB-Engine 的统计，反映了从 2013 年到今年所有的 NoSQL 类数据库的发展趋势。横轴代表的是时间，纵轴可以认为是受众程度，或者社区里的讨论热烈程度。大家可以看到绿色的线就是图数据库。这些年一共翻了十倍，增长还是非常迅猛的。</description></item><item><title>图数据库 Nebula Graph 的数据模型和系统架构设计</title><link>/nebula-website/cn/posts/nebula-graph-data-model-and-system-design/</link><pubDate>Wed, 24 Jul 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/nebula-graph-data-model-and-system-design/</guid><description>Nebula Graph：一个开源的分布式图数据库。作为唯一能够存储万亿个带属性的节点和边的在线图数据库，Nebula Graph 不仅能够在高并发场景下满足毫秒级的低时延查询要求，还能够实现服务高可用且保障数据安全性。
本篇主要介绍 Nebula Graph 的数据模型和系统架构设计。
有向属性图 DirectedPropertyGraph Nebula Graph 采用易理解的有向属性图来建模，也就是说，在逻辑上，图由两种图元素构成：顶点和边。
顶点 Vertex 在 Nebula Graph 中顶点由标签 tag 和对应 tag 的属性组构成， tag 代表顶点的类型，属性组代表 tag 拥有的一种或多种属性。一个顶点必须至少有一种类型，即标签，也可以有多种类型。每种标签有一组相对应的属性，我们称之为 schema 。
如上图所示，有两种 tag 顶点：player 和 team。player 的 schema 有三种属性 ID （vid），Name （sting）和 Age （int）；team 的 schema 有两种属性 ID （vid）和 Name （string）。
和 Mysql 一样，Nebula Graph 是一种强 schema 的数据库，属性的名称和数据类型都是在数据写入前确定的。
边 Edge 在 Nebula Graph 中边由类型和边属性构成，而 Nebula Graph 中边均是有向边，有向边表明一个顶点（ 起点 src ）指向另一个顶点（ 终点 dst ）的关联关系。此外，在 Nebula Graph 中我们将边类型称为 edgetype ，每一条边只有一种edgetype ，每种 edgetype 相应定义了这种边上属性的 schema 。</description></item></channel></rss>