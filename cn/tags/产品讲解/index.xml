<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>产品讲解 on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</title><link>/nebula-website/cn/tags/%E4%BA%A7%E5%93%81%E8%AE%B2%E8%A7%A3/</link><description>Recent content in 产品讲解 on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 12 May 2020 00:00:00 +0000</lastBuildDate><atom:link href="/nebula-website/cn/tags/%E4%BA%A7%E5%93%81%E8%AE%B2%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>图数据库 Nebula Graph 是什么</title><link>/nebula-website/cn/posts/what-is-nebula-graph/</link><pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/what-is-nebula-graph/</guid><description>图数据库（英语：Graph Database）是一个使用图结构进行语义查询的数据库。该系统的关键概念是图，形式上是点 (Node 或者 Vertex) 和边 (Edge 或者 Relationship) 的集合。一个顶点代表一个实体，比如，某个人，边则表示两个实体间的关联关系，比如 “你关注 Nebula Graph”的关注关系。图广泛存在于现实世界中，从社交网络到风控场景、从知识图谱到智能推荐。
Nebula Graph 是什么 Nebula Graph 是一款开源的分布式图数据库，擅长处理千亿个顶点和万亿条边的超大规模数据集。提供高吞吐量、低延时的读写能力，内置 ACL 机制和用户鉴权，为用户提供安全的数据库访问方式。
作为一款高性能高可靠的图数据库，Nebula Graph 提供了线性扩容的能力，支持快照方式实现数据恢复功能。在查询语言方面，开发团队完全自研开发查询语言——nGQL，并且后续会兼容 OpenCypher 接口，让 Neo4j 的用户可无缝衔接使用 Nebula Graph。
Nebula Graph 特性 开源：Nebula Graph 代码开源，采用 Apache 2.0 License，用户可以从 GitHub 下载源码自己编译，部署。欢迎提交 pr，成为 Contributor。 可扩展性：存储计算相分离的架构，当存储空间或计算资源不足时，支持对两者独立进行扩容，避免了传统架构需要同时扩容导致的经济效率低问题。云计算场景下，能实现真正的弹性计算。提供线性扩展的能力。 高可用：全对称分布式集群，无单点故障。并且支持多种类型快照方式实现数据恢复，保证在局部失败的情况下服务的高可用性。 HTAP: 支持 OLTP 实时查询的同时提供了 OLAP 的接口，真正在同一份数据上提供实时在线更新的前提下，也提供复杂分析和挖掘的能力。 安全性：内置授权登录与 ACL 机制，提供用户安全的数据库访问方式，也可接入 LDAP 认证。 类 SQL 查询语言 nGQL：类 SQL 的风格减少了程序员迁移的成本，同时具有表达能力强的优点。 Nebula Graph 架构 Nebula Graph 1.0 功能 基础功能 多图空间：支持多图空间，不同的图空间的数据物理隔离，并且可设置不同的副本数，以应对不同的可用性要求。 顶点：支持基本增删改查操作，支持多种顶点类型，也支持同一顶点有多种类型。 边：支持基本增删改查操作，支持有向图，支持节点间存在同一种类型或者不同类型的多条边。 Schema：Tag / EdgeType 支持多种数据类型，支持对属性设置默认值。一个点可以设置多个 Tag。 聚合操作：聚合函数 GROUP BY、排序函数 ORDER BY、限定函数 LIMIT 自由组合返回所需数据。 组合查询：UNION，UNION DISTINCT，INTERSECT，MINUS 对数据集进行组合查询。 条件查询/更新：IF&amp;hellip;RETURN 和 UPDATE &amp;hellip; WHEN 根据指定条件查询/更新数据。 Partition: 支持查看数据分片信息，以及 Partition 对应的 leader 信息。 顶点 ID 策略：支持用户自定义 int64 ID, 内置 hash() 和 uuid() 函数生成顶点 ID。 索引：支持索引、联合索引，对已建立索引的数据，按条件查找快速查找数据。 管道查询: 管道符前面查询语句的输出可作为管道符后面命令的输入。 用户定义变量：用户自定义变量可暂时将查询结果存储在自定义的变量中，并在随后查询语句中使用。 多种字符集、字符编码 高级功能 权限管理: 支持用户权限认证，支持用户角色访问控制。可轻松对接现有用户认证系统。 Nebula Graph 提供五种角色权限：GOD、ADMIN、DBA、USER 和 GUEST。 稠密点：对于超级顶点支持蓄水池采样, 在只遍历一遍数据（O(N)）的情况下，随机的抽取k个元素。 集群快照：支持以集群维度创建快照，提供在线的数据备份功能，快速恢复。 TTL：支持设置数据的有效期，快速清理过期数据释放资源。 Job Manager：Job 管理调度工具，目前支持 Compaction / Flush 操作。 支持在线扩缩容以及负载均衡 图算法：支持全路径 / 最短路径算法。 提供 OLAP 接口，对接图计算平台。 监控接口：支持系统状态监控、API 访问时间监控、性能数据监控等操作。 客户端 Java 客户端：可自行编译或者从 mvn 仓库进行下载。 Python 客户端：可通过源码安装或者 pip 进行安装。 Go 客户端：可通过 go get -u -v github.</description></item><item><title>图数据库 Nebula Graph 的代码变更测试覆盖率实践</title><link>/nebula-website/cn/posts/integrate-codecov-test-coverage-with-nebula-graph/</link><pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/integrate-codecov-test-coverage-with-nebula-graph/</guid><description>对于一个持续开发的大型工程而言，足够的测试是保证软件行为符合预期的有效手段，而不是仅仅依靠 code review 或者开发者自己的技术素质。测试的编写理想情况下应该完全定义软件的行为，但是通常情况都是很难达到这样理想的程度。而测试覆盖率就是检验测试覆盖软件行为的情况，通过检查测试覆盖情况可以帮助开发人员发现没有被覆盖到的代码。
测试覆盖信息搜集 Nebula Graph 主要是由 C++ 语言开发的，支持大部分 Linux 环境以及 gcc/clang 编译器，所以通过工具链提供的支持，我们可以非常方便地统计Nebula Graph的测试覆盖率。
gcc/clang 都支持 gcov 式的测试覆盖率功能，使用起来也是非常简单的，主要有如下几个步骤：
添加编译选项 --coverage -O0 -g  添加链接选项 --coverage  运行测试 使用 lcov，整合报告，例如 lcov --capture --directory . --output-file coverage.info  去掉外部代码统计，例如 lcov --remove coverage.info '*/opt/vesoft/*' -o clean.info  到这里测试覆盖信息已经搜集完毕，接下可以通过 genhtml 这样的工具生成 html，然后通过浏览器查看测试覆盖率，如下图所示：
但是这样是非常不方便的，因为在持续的开发过程，如果每次都要手动进行这样一套操作，那必然带来极大的人力浪费，所以现在的常用做法是将测试覆盖率写入 CI 并且和第三方平台（比如 Codecov，Coveralls）集成，这样开发人员完全不必关心测试覆盖信息的收集整理和展示问题，只需要发布代码后直接到第三方平台上查看覆盖情况即可，而且现在的第三方平台也支持直接在 PR 上评论覆盖情况使得查看覆盖率的变更情况更加方便。
集成 CI Github Action 现在主流的 CI 平台非常多，比如 Travis，azure-pipelines 以及 GitHub Action 等。Nebula Graph 选用的是 GitHub Action，对于 Action 我们在之前的《使用 Github Action 进行前端自动化发布》这篇文章里已经做过介绍。</description></item><item><title>全站 CDN 部署 Discourse 论坛</title><link>/nebula-website/cn/posts/self-host-discourse-forum-with-global-cdn/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/self-host-discourse-forum-with-global-cdn/</guid><description>Discourse 介绍 Discourse 是一款由 Stack Overflow 的联合创始人——Jeff Atwood，基于 Ruby on Rails 开发的开源论坛。相较于传统论坛，Discourse 从他全面开放的开源态度、简介明了的页面风格到其特有的内容运作体系都在证明自己是一款为下一个 10 年的互联网而设计的产品。现在，诸如 Car Talk 等国外知名产品都采用 Discourse 为论坛方案。
作为一个开源的论坛项目，Discourse 相对其他的论坛有以下亮点：
高度可定制：从发帖等级要求权限到论坛帖子标题最少字数要求，Discourse 在论坛设置里罗列了 25 设置大项，300+ 个论坛小项，即使大家都使用 Discourse 搭建论坛但是每个用 Discourse 搭建的论坛都有自己的风格。 插件：Discourse 官方及 Discourse 开源社区用户开发了丰富的插件可供使用，比如：个性化导航、自定义论坛封面。 集成：可接入第三方产品，Google Analytics、 Slack、Wordpress 都在支持之列。 免费：虽然 Discourse 有 $100/Month 的托管服务，但是你可以完全自行部署免费使用 Discourse 服务。 其他：Discourse 还有其他许多的好处，举个例子，它提供了一个机器人 Discobot 是一个可自定义的 bot，交互式地教新用户使用平台的许多功能，例如为主题添加书签，单框链接（嵌入的预览），添加 emoji表情，非常简单的格式设置，添加图片回复，标记帖子以及如何使用搜索功能。 丰富的插件、可自定义论坛设置便是 Nebula Graph 选择 Discourse 最大的原因，而本文不在于介绍如何搭建 Discourse（搭建 Discourse 是一个简单的活，可自行搜索教程），本文旨在介绍图数据库 Nebula graph 如何利用 CDN 来部署 Discourse。
部署 Discourse 自托管的原因 尽管 Discourse 官方的托管服务，但由于国内的访问质量不稳定、不能自由的修改插件和自定义网络设置，因此我们决定自行托管这项服务。基于自托管服务，我们对网络、插件系统做了一些自定义修改，使得目前 Nebula Graph社区有着更好的访问速度和功能。</description></item><item><title>Github Statistics 一个基于 React 的 GitHub 数据统计工具</title><link>/nebula-website/cn/posts/introduction-to-react-based-github-statistics/</link><pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/introduction-to-react-based-github-statistics/</guid><description>V 站曾经有个热帖说为何我的开源项目只有 Fork 没有 Star，楼下有个热评说开源项目关注的不应该是 Commit 数据吗？先不论 Star、Fork 和 Commit，issue 、pr 也应是一个开源项目社区关注的数据。
下面我们来看看市面上有哪些 GitHub 数据统计工具
GitHub Star 数据统计工具 Chrome 插件—— Star History 顾名思义你可以通过 Star History 这个项目看到一个项目的趋势增长，安装上此插件之后你可以直接在某个开源项目主页，如下图所示，一键操作看 star 增长趋势无烦恼。
当然它也有在线版：https://star-history.t9t.io/ 可以戳这个链接体验。
在线版 —— StarTrack-js StarTrack 和 Star History 类似也是一个 Star 统计工具，操作稍繁琐，需要填入该项目所有者的用户名及项目名，下图以 VEsoft-inc 的 Nebula 项目为例：
除了简单的 Star 趋势图，StarTrack 还为你统计了这个项目的 Star 总数、开源时间及每日获得 Star 数等维度数据。
GitHub 数据统计工具—— Github Statistics 不只是 Fork 数和 Commit 数，统计 issue 数的工具在 Google 搜索也是查无此项（如果你有知道此类工具欢迎在评论文留言 👏），GitHub Statistics 是据我所知唯一的可以统计某个开源项目的指标数，包括 GitHub Star、Fork、Commit、issue 和 pr 等数据的工具，当然 GitHub Statistics 也支持你查看项目的 Release 信息，在线体验：https://vesoft-inc.</description></item><item><title>COSCon'19 | 如何设计新一代的图数据库 Nebula</title><link>/nebula-website/cn/posts/coscon-2019-nebula-graph-database/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>/nebula-website/cn/posts/coscon-2019-nebula-graph-database/</guid><description>11 月 2 号 - 11 月 3 号，以“大爱无疆，开源无界”为主题的 2019 中国开源年会（COSCon&amp;rsquo;19）正式启动，大会以开源治理、国际接轨、社区发展和开源项目为切入点同全球开源爱好者们共同交流开源。
作为图数据库技术的代表，Nebula Graph 总监——吴敏在本次大会上将会讲述了大规模分布式图数据库设计思考和实践。在信息爆发式增长和内容平台遍地开花的信息时代，图数据库在当中扮演了什么样的角色？同传统数据库相比，图数据库又有什么优势？图数据库开发需要哪些新技术？就此，开源社特访吴敏来分享下图数据库主题内容，从图数据 Nebula 的研发开始，就传统数据库面临的挑战，开源模式的优势，Nebula 的社区开展和产品规划等问题进行深入解析。
About Nebula 总监&amp;ndash;吴敏 开源社：Hi，吴敏，先和大家介绍下自己。 大家好，我是吴敏，VEsoft 总监，博士毕业于浙江大学。 曾就职于阿里云、蚂蚁金服，从事分布式图数据库以及云存储相关工作。
开源社：谈谈您在 COSCon&amp;rsquo;19 上的分享话题。 随着抖音、小红书等社交内容平台的爆红诞生了一种基于社交关系网路的推荐需求，而以垂直领域作为切入点的知识图谱过去两年的“爆火”，传统数据库在处理社交推荐、风控、知识图谱方面的性能缺陷，图数据库的研发应运而生。
本演讲开篇将陈述图数据库行业现状，让你对图数据库存储的数据及对场景有所了解，再从开源的分布式图数据库 Nebula Graph 切入深度讲解大规模分布式图数据库应该如何设计存储、计算及架构，最后讲述开源对图数据库开发的影响。
内容大纲
图数据库概述及应用 Nebula Graph 设计介绍 技术细节 开源社区及服务 开源社：哪些人可以应该了解这个内容？ 对图数据库有兴趣，或是有推荐、风控、知识图谱等业务场景需求的人。
Nebula 研发之旅 开源社：为什么给图数据库取名 Nebula ？ Nebula 是星云的意思，很大嘛，也是漫威宇宙里面漂亮的星云小姐姐。对了，Nebula的发音是：[ˈnɛbjələ]
开源社：现在数据库领域百花齐放，国产的 OceanBase 和 TiDB 都发展得不错，为什么还要研发 Nebula 这样的图数据库？ OceanBase、TiDB 这类 NewSQL 最近发展势头很强劲，他们的出现更多的是对传统单机的关系型数据库在可用性的补充。Nebula 聚焦在图数据库这一领域，也是近年来在数据库各分支中增长最为快速的领域。图数据库使用图（或者网）的方式很直接、自然的表达现实世界的关系: 用节点来表示实体，边来表示关联关系，everything is connected。能高效的提供图检索，提供专业的分析算法、工具，比如 ShortestPath、PageRank、标签传播等等。
开源社：图数据库应用场景有哪些？ 典型的应用场景有社交网络，金融风控，推荐引擎，知识图谱等。
社交网络，比如，推荐一条最短路径让我结识迪纳热巴，还可以加上筛选条件，路径中的每个人都是单身女性。
金融风控场景，比如，去查一个信用卡反套现的网络。很典型的一个场景，A 转账到 B，B 转账到 C，C 又转回给 A 即是一个典型的闭环。对于这样的闭环，这类查询在图数据库大规模应用之前，大部分都是采用离线计算的方式去查找，但是离线场景很难去控制当前发生的这笔交易。一个信用卡交易或者在线贷款，整个作业流程很长，而在反套现这块的审核时间又限制在毫秒级，这就是图数据库非常大的一个应用场景。</description></item></channel></rss>