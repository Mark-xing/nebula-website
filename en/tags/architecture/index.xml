<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Architecture on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</title><link>aseURL=vesoft-inc.github.io/nebula-website/en/tags/architecture/</link><description>Recent content in Architecture on Nebula Graph - An Open Source, Distributed and High Performant Graph Database</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 30 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="aseURL=vesoft-inc.github.io/nebula-website/en/tags/architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>An Introduction to Nebula Graph’s Query Engine</title><link>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-query-engine-overview/</link><pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate><guid>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-query-engine-overview/</guid><description>The query engine is used to process the Nebula Graph Query Language (nGQL) statements. This article gives an architectural overview of the Nebula Graph query engine.
Above is the overview chart of the query engine. If you are familiar with the SQL execution engine, this should be no stranger to you. In fact, the Nebula Graph query engine is very similar to the modern SQL execution engine except the query language parser and the real actions in the execution plan.</description></item><item><title>Introduction to Nebula Graph Storage Engine</title><link>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-storage-engine-overview/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-storage-engine-overview/</guid><description>Abstract This document gives an introduction to the storage design of the graph database Nebula Graph.
The Storage Service of Nebula Graph is composed of two parts. One is Meta Service that stores the meta data, the other is Storage Servicethat stores the data. The two services are in two independent processes. The data and deployment are separated but their architectures are almost the same.
Architecture Pict.1 The Architecture of Storage Service</description></item><item><title>Nebula Graph Architecture — A Bird’s View</title><link>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-architecture-overview/</link><pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate><guid>aseURL=vesoft-inc.github.io/nebula-website/en/posts/nebula-graph-architecture-overview/</guid><description>Nebula Graph is an open-source distributed graph database solution. So as an open-source project, we&amp;rsquo;d like those who are interested in graph databases to know as much as possible how Nebula Graph is designed and why it is a highly performant database.
That&amp;rsquo;s how this series of architecture articles have come into play. We are going to cover the following three areas in this series:
A high-level overview of the architecture of Nebula Graph, which is what this article is going to talk about How Nebula Graph&amp;rsquo;s storage engine works How Nebula Graph&amp;rsquo;s query engine works, including the way we have designed nQGL, our graph query language Nebula Graph Architecture Diagram Seen from the diagram above, a fully deployed Nebula Graph cluster contains three services:</description></item></channel></rss>